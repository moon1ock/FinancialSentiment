{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasraffone/Documents/swefall2021/finalproj/FinancialSentiment/fin_sentiment_front/src/components/searchpage/timegraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { TimeSeries } from \"pondjs\";\nimport { Charts, ChartContainer, ChartRow, YAxis, LineChart } from \"react-timeseries-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimeGraph = props => {\n  _s();\n\n  const {\n    pricematrix\n  } = props;\n  const [series, setSeries] = useState(null);\n  useEffect(() => {\n    const data = {\n      columns: [\"time\", \"value\"],\n      points: pricematrix\n    };\n\n    if (pricematrix) {\n      setSeries(new TimeSeries(data));\n    }\n  }, [pricematrix]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: series ? /*#__PURE__*/_jsxDEV(ChartContainer, {\n      timeRange: series.timerange(),\n      width: 350,\n      children: /*#__PURE__*/_jsxDEV(ChartRow, {\n        height: 100,\n        children: [/*#__PURE__*/_jsxDEV(YAxis, {\n          id: \"axis1\",\n          format: \"$.2f\",\n          width: \"60\",\n          type: \"linear\",\n          min: series.min(),\n          max: series.max()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Charts, {\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            axis: \"axis1\",\n            series: series\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TimeGraph, \"DBT1+mi4sPZPXwKo6KKt9bC2kWE=\");\n\n_c = TimeGraph;\nexport default TimeGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeGraph\");","map":{"version":3,"sources":["/Users/nicholasraffone/Documents/swefall2021/finalproj/FinancialSentiment/fin_sentiment_front/src/components/searchpage/timegraph.js"],"names":["React","useEffect","useState","TimeSeries","Charts","ChartContainer","ChartRow","YAxis","LineChart","TimeGraph","props","pricematrix","series","setSeries","data","columns","points","timerange","min","max"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,QAAjC,EAA2CC,KAA3C,EAAkDC,SAAlD,QAAmE,yBAAnE;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAU;AAAA;;AACxB,QAAM;AAACC,IAAAA;AAAD,MAAgBD,KAAtB;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMa,IAAI,GAAG;AACTC,MAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,OAAT,CADA;AAETC,MAAAA,MAAM,EAAEL;AAFC,KAAb;;AAIA,QAAGA,WAAH,EAAe;AACXE,MAAAA,SAAS,CAAC,IAAIV,UAAJ,CAAeW,IAAf,CAAD,CAAT;AACH;AACJ,GARQ,EAQP,CAACH,WAAD,CARO,CAAT;AAUA,sBACI;AAAA,cACKC,MAAM,gBACH,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEA,MAAM,CAACK,SAAP,EAA3B;AAA+C,MAAA,KAAK,EAAE,GAAtD;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,MAAM,EAAE,GAAlB;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,MAAM,EAAC,MAAzB;AAAgC,UAAA,KAAK,EAAC,IAAtC;AAA2C,UAAA,IAAI,EAAC,QAAhD;AAAyD,UAAA,GAAG,EAAEL,MAAM,CAACM,GAAP,EAA9D;AAA4E,UAAA,GAAG,EAAEN,MAAM,CAACO,GAAP;AAAjF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAA,iCACI,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC,OAAhB;AAAwB,YAAA,MAAM,EAAEP;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG,GAQe;AAT1B;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA3BD;;GAAMH,S;;KAAAA,S;AA4BN,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { TimeSeries } from \"pondjs\";\nimport { Charts, ChartContainer, ChartRow, YAxis, LineChart } from \"react-timeseries-charts\";\n\nconst TimeGraph = (props) =>{\n    const {pricematrix} = props;\n    const [series, setSeries] = useState(null);\n    useEffect(()=>{\n        const data = {\n            columns: [\"time\", \"value\"],\n            points: pricematrix\n        };\n        if(pricematrix){\n            setSeries(new TimeSeries(data))\n        }\n    },[pricematrix])\n\n    return(\n        <div>\n            {series?\n                <ChartContainer timeRange={series.timerange()} width={350} >\n                    <ChartRow height={100}>\n                        <YAxis id=\"axis1\" format=\"$.2f\" width=\"60\" type=\"linear\" min={series.min()} max={series.max()}/>\n                        <Charts>\n                            <LineChart axis=\"axis1\" series={series}/>\n                        </Charts>\n                    </ChartRow>\n                </ChartContainer>:null\n            }\n        </div>\n    )\n}\nexport default TimeGraph"]},"metadata":{},"sourceType":"module"}