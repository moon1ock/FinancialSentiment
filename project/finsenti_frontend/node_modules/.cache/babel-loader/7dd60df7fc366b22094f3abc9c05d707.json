{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _underscore = require(\"underscore\");\n\nvar _underscore2 = _interopRequireDefault(_underscore);\n\nvar _merge = require(\"merge\");\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _pondjs = require(\"pondjs\");\n\nvar _EventMarker = require(\"./EventMarker\");\n\nvar _EventMarker2 = _interopRequireDefault(_EventMarker);\n\nvar _styler = require(\"../js/styler\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n *  Copyright (c) 2015-present, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n\nvar defaultStyle = {\n  normal: {\n    fill: \"steelblue\",\n    opacity: 0.8\n  },\n  highlighted: {\n    fill: \"steelblue\",\n    opacity: 1.0\n  },\n  selected: {\n    fill: \"steelblue\",\n    opacity: 1.0\n  },\n  muted: {\n    fill: \"steelblue\",\n    opacity: 0.4\n  }\n};\n/**\n * Renders a bar chart based on IndexedEvents within a TimeSeries.\n *\n * This BarChart implementation is a little different that other time axis\n * bar charts in that it will render across a the time range of the event\n * rather than rendering to specific categories. As a result,\n * a Aug-2014 bar will render between the Aug 2014 tick mark and\n * the Sept 2014 tickmark. However, this allows it to play well with other\n * types of charts that maybe integrated into the same visualization.\n *\n * The BarChart will render a single TimeSeries. You can specify the columns\n * you want to render with the `columns` prop. Each column will be stacked on\n * the other, in the order specified in the `columns` array.\n *\n * ### IndexedEvents\n *\n * BarCharts are supposed to be for aggregated values (e.g. average of\n * many points over an hour), so the hours themselves are specified\n * with an \"Index\". An Index is a string that represents that range of time,\n * rather than a specific time like a timestamp would.\n *\n * Pond provides several mechanisms for building aggregated series from\n * a TimeSeries, and the BarChart code is suited to visualizing that\n * output. See Pond for more details (especially TimeSeries.fixedWindowRollup\n * and the Pipeline processing facilities). The realtime example in this\n * library also shows how to do this on incoming streams of data.\n *\n * If you have one timestamped point per hour and really want to represent\n * those with a BarChart, you can use the Pond static method\n * `Index.getIndexString(period, date)` to take the Date and return an\n * Index string. Say if those points were hourly, you'll end up with\n * strings that look like \"1h-412715\". This represents a specific hour\n * in time (the 412,715th hour since midnight 1 Jan 1970, actually).\n * Note that for larger time periods, index strings can be partial\n * dates, like \"2016-08-31\" for Aug 31st, 2016 or \"2016-08\" for Aug 2016.\n *\n * Use those index strings to build your timeseries instead of timestamps.\n * Here's the Pond code needed to convert a date to an index string:\n *\n * ```\n *   import { Index } from \"pondjs\";\n *   const d = new Date(\"2017-01-30T11:58:38.741Z\");\n *   const index = Index.getIndexString(\"1h\", d);   // '1h-412715'\n * ```\n *\n * With either the aggregated approach, or the above timestamped\n * conversion, you will want a `TimeSeries` of `IndexedEvent`s that\n * looks like this:\n * ```\n *   const series = new TimeSeries({\n *     name: \"myseries\",\n *     columns: [\"index\", \"value\"],\n *     points: [\n *       [\"1h-41275\", 22],\n *       [\"1h-41276\", 35],\n *       [\"1h-41277\", 72],\n *       ...\n *     ]\n *   })\n * ```\n *\n * Note: the first column of the timeseries should be \"index\" (not \"time\")\n * and each point should have an index string at the beginning.\n *\n * ### Interactivity\n *\n * The BarChart supports selection of individual bars. To control this use\n * `onSelectionChange` to get a callback of selection changed. Your callback\n * will be called with the selection (an object containing the event\n * and column). You can pass this back into the BarChart as `selection`. For\n * example:\n *\n * ```\n *  <BarChart\n *      ...\n *      selection={this.state.selection}\n *      onSelectionChange={selection => this.setState({selection})} />\n * ```\n *\n * Similarly you can monitor which bar is being hovered over with the\n * `onHighlightChange` callback. This can be used to determine the info box\n * to display. Info box will display a box (like a tooltip) with a line\n * connecting it to the bar. You use the `info` prop to evoke this and to\n * supply the text for the info box. See the styling notes below for more\n * information on this.\n *\n * ### Styling\n *\n * A BarChart supports per-column or per-event styling. Styles can be set for\n * each of the four states that are possible: normal, highlighted,\n * selected and muted. To style per-column, supply an object. For per-event styling\n * supply a function: `(event, column) => {}` The functon should return a style object.\n *\n * See the `style` prop in the API documentation for more information.\n *\n * Separately the size of the bars can be controlled with the `spacing` and\n * `offset` props. Spacing controls the gap between the bars. Offset moves the\n * bars left or right by the given number of pixels. You can use this to place\n * bars along side each other. Alternatively, you can give each column a fixed width\n * using the `size` prop. In this case this size will be used in preference to the size\n * determined from the timerange of the event and the `spacing`.\n *\n * The info box is also able to be styled using `infoStyle`, `stemStyle` and\n * `markerStyle` This enables you to control the drawing of the box, the connecting\n * lines (stem) and dot respectively. Using the `infoWidth` and `infoHeight`\n * props you can control the size of the box, which is fixed. For the info inside\n * the box, it's up to you: it can either be a simple string or an array of\n * {label, value} pairs.\n */\n\nvar BarChart = function (_React$Component) {\n  _inherits(BarChart, _React$Component);\n\n  function BarChart() {\n    _classCallCheck(this, BarChart);\n\n    return _possibleConstructorReturn(this, (BarChart.__proto__ || Object.getPrototypeOf(BarChart)).apply(this, arguments));\n  }\n\n  _createClass(BarChart, [{\n    key: \"handleHover\",\n    value: function handleHover(e, event, column) {\n      var bar = {\n        event: event,\n        column: column\n      };\n\n      if (this.props.onHighlightChange) {\n        this.props.onHighlightChange(bar);\n      }\n    }\n  }, {\n    key: \"handleHoverLeave\",\n    value: function handleHoverLeave() {\n      if (this.props.onHighlightChange) {\n        this.props.onHighlightChange(null);\n      }\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e, event, column) {\n      var bar = {\n        event: event,\n        column: column\n      };\n\n      if (this.props.onSelectionChange) {\n        this.props.onSelectionChange(bar);\n      }\n\n      e.stopPropagation();\n    }\n  }, {\n    key: \"providedStyleMap\",\n    value: function providedStyleMap(column, event) {\n      var style = {};\n\n      if (this.props.style) {\n        if (this.props.style instanceof _styler.Styler) {\n          style = this.props.style.barChartStyle()[column];\n        } else if (_underscore2.default.isFunction(this.props.style)) {\n          style = this.props.style(column, event);\n        } else if (_underscore2.default.isObject(this.props.style)) {\n          style = this.props.style ? this.props.style[column] : defaultStyle;\n        }\n      }\n\n      return style;\n    }\n    /**\n     * Returns the style used for drawing the path\n     */\n\n  }, {\n    key: \"style\",\n    value: function style(column, event) {\n      var style = void 0;\n      var styleMap = this.providedStyleMap(column, event);\n\n      var isHighlighted = this.props.highlighted && (column === this.props.highlighted.column && _pondjs.Event.is(this.props.highlighted.event, event) || this.props.highlightEntireEvent && _pondjs.Event.is(this.props.highlighted.event, event));\n\n      var isSelected = this.props.selected && column === this.props.selected.column && _pondjs.Event.is(this.props.selected.event, event);\n\n      if (this.props.selected) {\n        if (isSelected) {\n          style = (0, _merge2.default)(true, defaultStyle.selected, styleMap.selected ? styleMap.selected : {});\n        } else if (isHighlighted) {\n          style = (0, _merge2.default)(true, defaultStyle.highlighted, styleMap.highlighted ? styleMap.highlighted : {});\n        } else {\n          style = (0, _merge2.default)(true, defaultStyle.muted, styleMap.muted ? styleMap.muted : {});\n        }\n      } else if (isHighlighted) {\n        style = (0, _merge2.default)(true, defaultStyle.highlighted, styleMap.highlighted ? styleMap.highlighted : {});\n      } else {\n        style = (0, _merge2.default)(true, defaultStyle.normal, styleMap.normal ? styleMap.normal : {});\n      }\n\n      return style;\n    }\n  }, {\n    key: \"renderBars\",\n    value: function renderBars() {\n      var _this2 = this;\n\n      var spacing = +this.props.spacing;\n      var offset = +this.props.offset;\n      var minBarHeight = this.props.minBarHeight;\n      var series = this.props.series;\n      var timeScale = this.props.timeScale;\n      var yScale = this.props.yScale;\n      var columns = this.props.columns || [\"value\"];\n      var bars = [];\n      var eventMarker = void 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var event = _step.value;\n          var begin = event.begin();\n          var end = event.end();\n          var beginPos = timeScale(begin) + spacing;\n          var endPos = timeScale(end) - spacing;\n          var width = void 0;\n\n          if (_this2.props.size) {\n            width = _this2.props.size;\n          } else {\n            width = endPos - beginPos;\n          }\n\n          if (width < 1) {\n            width = 1;\n          }\n\n          var x = void 0;\n\n          if (_this2.props.size) {\n            var center = timeScale(begin) + (timeScale(end) - timeScale(begin)) / 2;\n            x = center - _this2.props.size / 2 + offset;\n          } else {\n            x = timeScale(begin) + spacing + offset;\n          }\n\n          var yBase = yScale(0);\n          var yposPositive = yBase;\n          var yposNegative = yBase;\n\n          if (columns) {\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              var _loop2 = function _loop2() {\n                var column = _step2.value;\n                var index = event.index();\n                var key = series.name() + \"-\" + index + \"-\" + column;\n                var value = event.get(column);\n\n                var style = _this2.style(column, event);\n\n                var height = yScale(0) - yScale(value); // Allow negative values. Minimum bar height = 1 pixel.\n                // Stack negative bars below X-axis and positive above X-Axis\n\n                var positiveBar = height >= 0;\n                height = Math.max(Math.abs(height), minBarHeight);\n                var y = positiveBar ? yposPositive - height : yposNegative; // Don't draw a rect when height and minBarHeight are both 0\n\n                if (height === 0) return \"break\"; // Event marker if info provided and hovering\n\n                var isHighlighted = _this2.props.highlighted && column === _this2.props.highlighted.column && _pondjs.Event.is(_this2.props.highlighted.event, event);\n\n                if (isHighlighted && _this2.props.info) {\n                  eventMarker = _react2.default.createElement(_EventMarker2.default, _extends({}, _this2.props, {\n                    event: event,\n                    column: column,\n                    offsetX: offset,\n                    offsetY: yBase - (positiveBar ? yposPositive : yposNegative)\n                  }));\n                }\n\n                var box = {\n                  x: x,\n                  y: y,\n                  width: width,\n                  height: height\n                };\n\n                var barProps = _extends({\n                  key: key\n                }, box, {\n                  style: style\n                });\n\n                if (_this2.props.onSelectionChange) {\n                  barProps.onClick = function (e) {\n                    return _this2.handleClick(e, event, column);\n                  };\n                }\n\n                if (_this2.props.onHighlightChange) {\n                  barProps.onMouseMove = function (e) {\n                    return _this2.handleHover(e, event, column);\n                  };\n\n                  barProps.onMouseLeave = function () {\n                    return _this2.handleHoverLeave();\n                  };\n                }\n\n                bars.push(_react2.default.createElement(\"rect\", barProps));\n\n                if (positiveBar) {\n                  yposPositive -= height;\n                } else {\n                  yposNegative += height;\n                }\n              };\n\n              for (var _iterator2 = columns[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var _ret2 = _loop2();\n\n                if (_ret2 === \"break\") break;\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                  _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          }\n        };\n\n        for (var _iterator = series.events()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          _loop();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return _react2.default.createElement(\"g\", null, bars, eventMarker);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(\"g\", null, this.renderBars());\n    }\n  }]);\n\n  return BarChart;\n}(_react2.default.Component);\n\nexports.default = BarChart;\nBarChart.propTypes = {\n  /**\n   * Show or hide this chart\n   */\n  visible: _propTypes2.default.bool,\n\n  /**\n   * What [Pond TimeSeries](https://esnet-pondjs.appspot.com/#/timeseries)\n   * data to visualize\n   */\n  series: _propTypes2.default.instanceOf(_pondjs.TimeSeries).isRequired,\n\n  /**\n   * The distance in pixels to inset the bar chart from its actual timerange\n   */\n  spacing: _propTypes2.default.number,\n\n  /**\n   * The distance in pixels to offset the bar from its center position within the timerange\n   * it represents\n   */\n  offset: _propTypes2.default.number,\n\n  /**\n   * The minimum height of a bar given in pixels.\n   * By default, the minimum height of a bar is 1 pixel\n   */\n  minBarHeight: _propTypes2.default.number,\n\n  /**\n   * A list of columns within the series that will be stacked on top of each other\n   *\n   * NOTE : Columns can't have periods because periods\n   * represent a path to deep data in the underlying events\n   * (i.e. reference into nested data structures)\n   */\n  columns: _propTypes2.default.arrayOf(_propTypes2.default.string),\n\n  /**\n   * When true, the entire `highlighted` event will be highlighted, instead of\n   * only the column bar that's currently being hovered\n   */\n  highlightEntireEvent: _propTypes2.default.bool,\n\n  /**\n   * The style of the bar chart drawing (using SVG CSS properties).\n   * This is an object with a key for each column which is being drawn,\n   * per the `columns` prop. For each column a style is defined for\n   * each state the bar may be in. This style is the CSS properties for\n   * the underlying SVG <Rect>, so most likely you'll define fill and\n   * opacity.\n   *\n   * For example:\n   * ```\n   * style = {\n   *     columnName: {\n   *         normal: {\n   *             fill: \"steelblue\",\n   *             opacity: 0.8,\n   *         },\n   *         highlighted: {\n   *             fill: \"#a7c4dd\",\n   *             opacity: 1.0,\n   *         },\n   *         selected: {\n   *             fill: \"orange\",\n   *             opacity: 1.0,\n   *         },\n   *         muted: {\n   *             fill: \"grey\",\n   *             opacity: 0.5\n   *         }\n   *     }\n   * }\n   * ```\n   *\n   * You can also supply a function, which will be called with an event\n   * and column. The function should return an object containing the\n   * four states (normal, highlighted, selected and muted) and the corresponding\n   * CSS properties.\n   */\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func, _propTypes2.default.instanceOf(_styler.Styler)]),\n\n  /**\n   * The values to show in the info box. This is an array of\n   * objects, with each object specifying the label and value\n   * to be shown in the info box.\n   */\n  info: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    label: _propTypes2.default.string,\n    //eslint-disable-line\n    value: _propTypes2.default.string //eslint-disable-line\n\n  })),\n\n  /**\n   * The style of the info box itself. Typically you'd want to\n   * specify a fill color, and stroke color / width here.\n   */\n  infoStyle: _propTypes2.default.object,\n  //eslint-disable-line\n\n  /**\n   * The width of the info box\n   */\n  infoWidth: _propTypes2.default.number,\n  //eslint-disable-line\n\n  /**\n   * The height of the info box\n   */\n  infoHeight: _propTypes2.default.number,\n  //eslint-disable-line\n\n  /**\n   * The vertical offset in pixels of the EventMarker info box from the\n   * top of the chart.\n   */\n  infoOffsetY: _propTypes2.default.number,\n\n  /**\n   * Alter the format of the timestamp shown on the info box.\n   * This may be either a function or a string. If you provide a function\n   * that will be passed an Index and should return a string. For example:\n   * ```\n   *     index => moment(index.begin()).format(\"Do MMM 'YY\")\n   * ```\n   * Alternatively you can pass in a d3 format string. That will be applied\n   * to the begin time of the Index range.\n   */\n  infoTimeFormat: _propTypes2.default.oneOfType([//eslint-disable-line\n  _propTypes2.default.string, //eslint-disable-line\n  _propTypes2.default.func //eslint-disable-line\n  ]),\n\n  /**\n   * The radius of the infoBox dot at the end of the marker\n   */\n  markerRadius: _propTypes2.default.number,\n\n  /**\n   * The style of the infoBox dot at the end of the marker\n   */\n  markerStyle: _propTypes2.default.object,\n\n  /**\n   * If size is specified, then the bar will be this number of pixels wide. This\n   * prop takes priority over \"spacing\".\n   */\n  size: _propTypes2.default.number,\n\n  /**\n   * The selected item, which will be rendered in the \"selected\" style.\n   * If a bar is selected, all other bars will be rendered in the \"muted\" style.\n   *\n   * See also `onSelectionChange`\n   */\n  selected: _propTypes2.default.shape({\n    event: _propTypes2.default.instanceOf(_pondjs.IndexedEvent),\n    column: _propTypes2.default.string\n  }),\n\n  /**\n   * A callback that will be called when the selection changes. It will be called\n   * with an object containing the event and column.\n   */\n  onSelectionChange: _propTypes2.default.func,\n\n  /**\n   * The highlighted item, which will be rendered in the \"highlighted\" style.\n   *\n   * See also `onHighlightChange`\n   */\n  highlighted: _propTypes2.default.shape({\n    event: _propTypes2.default.instanceOf(_pondjs.IndexedEvent),\n    column: _propTypes2.default.string\n  }),\n\n  /**\n   * A callback that will be called when the hovered over bar changes.\n   * It will be called with an object containing the event and column.\n   */\n  onHighlightChange: _propTypes2.default.func,\n\n  /**\n   * [Internal] The timeScale supplied by the surrounding ChartContainer\n   */\n  timeScale: _propTypes2.default.func,\n\n  /**\n   * [Internal] The yScale supplied by the associated YAxis\n   */\n  yScale: _propTypes2.default.func\n};\nBarChart.defaultProps = {\n  visible: true,\n  columns: [\"value\"],\n  highlightEntireEvent: false,\n  spacing: 1.0,\n  offset: 0,\n  minBarHeight: 1,\n  infoStyle: {\n    stroke: \"#999\",\n    fill: \"white\",\n    opacity: 0.9,\n    pointerEvents: \"none\"\n  },\n  stemStyle: {\n    stroke: \"#999\",\n    cursor: \"crosshair\",\n    pointerEvents: \"none\"\n  },\n  markerStyle: {\n    fill: \"#999\"\n  },\n  markerRadius: 2,\n  infoWidth: 90,\n  infoHeight: 30,\n  infoOffsetY: 20\n};","map":{"version":3,"sources":["/Users/nicholasraffone/Documents/swefall2021/finalproj/FinancialSentiment/fin_sentiment_front/node_modules/react-timeseries-charts/lib/components/BarChart.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_underscore","require","_underscore2","_interopRequireDefault","_merge","_merge2","_react","_react2","_propTypes","_propTypes2","_pondjs","_EventMarker","_EventMarker2","_styler","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","defaultStyle","normal","fill","opacity","highlighted","selected","muted","BarChart","_React$Component","getPrototypeOf","apply","handleHover","e","event","column","bar","onHighlightChange","handleHoverLeave","handleClick","onSelectionChange","stopPropagation","providedStyleMap","style","Styler","barChartStyle","isFunction","isObject","styleMap","isHighlighted","Event","is","highlightEntireEvent","isSelected","renderBars","_this2","spacing","offset","minBarHeight","series","timeScale","yScale","columns","bars","eventMarker","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_loop","_step","begin","end","beginPos","endPos","width","size","x","center","yBase","yposPositive","yposNegative","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_loop2","_step2","index","name","get","height","positiveBar","Math","max","abs","y","info","createElement","offsetX","offsetY","box","barProps","onClick","onMouseMove","onMouseLeave","push","_iterator2","Symbol","iterator","next","done","_ret2","err","return","_iterator","events","render","Component","propTypes","visible","bool","instanceOf","TimeSeries","isRequired","number","arrayOf","string","oneOfType","object","func","shape","label","infoStyle","infoWidth","infoHeight","infoOffsetY","infoTimeFormat","markerRadius","markerStyle","IndexedEvent","defaultProps","stroke","pointerEvents","stemStyle","cursor"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _underscore = require(\"underscore\");\n\nvar _underscore2 = _interopRequireDefault(_underscore);\n\nvar _merge = require(\"merge\");\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _pondjs = require(\"pondjs\");\n\nvar _EventMarker = require(\"./EventMarker\");\n\nvar _EventMarker2 = _interopRequireDefault(_EventMarker);\n\nvar _styler = require(\"../js/styler\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\nopyright (c) 2015-present, The Regents of the University of California,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).\nll rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhis source code is licensed under the BSD-style license found in the\nfile in the root directory of this source tree.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar defaultStyle = {\n    normal: { fill: \"steelblue\", opacity: 0.8 },\n    highlighted: { fill: \"steelblue\", opacity: 1.0 },\n    selected: { fill: \"steelblue\", opacity: 1.0 },\n    muted: { fill: \"steelblue\", opacity: 0.4 }\n};\n\n/**\n * Renders a bar chart based on IndexedEvents within a TimeSeries.\n *\n * This BarChart implementation is a little different that other time axis\n * bar charts in that it will render across a the time range of the event\n * rather than rendering to specific categories. As a result,\n * a Aug-2014 bar will render between the Aug 2014 tick mark and\n * the Sept 2014 tickmark. However, this allows it to play well with other\n * types of charts that maybe integrated into the same visualization.\n *\n * The BarChart will render a single TimeSeries. You can specify the columns\n * you want to render with the `columns` prop. Each column will be stacked on\n * the other, in the order specified in the `columns` array.\n *\n * ### IndexedEvents\n *\n * BarCharts are supposed to be for aggregated values (e.g. average of\n * many points over an hour), so the hours themselves are specified\n * with an \"Index\". An Index is a string that represents that range of time,\n * rather than a specific time like a timestamp would.\n *\n * Pond provides several mechanisms for building aggregated series from\n * a TimeSeries, and the BarChart code is suited to visualizing that\n * output. See Pond for more details (especially TimeSeries.fixedWindowRollup\n * and the Pipeline processing facilities). The realtime example in this\n * library also shows how to do this on incoming streams of data.\n *\n * If you have one timestamped point per hour and really want to represent\n * those with a BarChart, you can use the Pond static method\n * `Index.getIndexString(period, date)` to take the Date and return an\n * Index string. Say if those points were hourly, you'll end up with\n * strings that look like \"1h-412715\". This represents a specific hour\n * in time (the 412,715th hour since midnight 1 Jan 1970, actually).\n * Note that for larger time periods, index strings can be partial\n * dates, like \"2016-08-31\" for Aug 31st, 2016 or \"2016-08\" for Aug 2016.\n *\n * Use those index strings to build your timeseries instead of timestamps.\n * Here's the Pond code needed to convert a date to an index string:\n *\n * ```\n *   import { Index } from \"pondjs\";\n *   const d = new Date(\"2017-01-30T11:58:38.741Z\");\n *   const index = Index.getIndexString(\"1h\", d);   // '1h-412715'\n * ```\n *\n * With either the aggregated approach, or the above timestamped\n * conversion, you will want a `TimeSeries` of `IndexedEvent`s that\n * looks like this:\n * ```\n *   const series = new TimeSeries({\n *     name: \"myseries\",\n *     columns: [\"index\", \"value\"],\n *     points: [\n *       [\"1h-41275\", 22],\n *       [\"1h-41276\", 35],\n *       [\"1h-41277\", 72],\n *       ...\n *     ]\n *   })\n * ```\n *\n * Note: the first column of the timeseries should be \"index\" (not \"time\")\n * and each point should have an index string at the beginning.\n *\n * ### Interactivity\n *\n * The BarChart supports selection of individual bars. To control this use\n * `onSelectionChange` to get a callback of selection changed. Your callback\n * will be called with the selection (an object containing the event\n * and column). You can pass this back into the BarChart as `selection`. For\n * example:\n *\n * ```\n *  <BarChart\n *      ...\n *      selection={this.state.selection}\n *      onSelectionChange={selection => this.setState({selection})} />\n * ```\n *\n * Similarly you can monitor which bar is being hovered over with the\n * `onHighlightChange` callback. This can be used to determine the info box\n * to display. Info box will display a box (like a tooltip) with a line\n * connecting it to the bar. You use the `info` prop to evoke this and to\n * supply the text for the info box. See the styling notes below for more\n * information on this.\n *\n * ### Styling\n *\n * A BarChart supports per-column or per-event styling. Styles can be set for\n * each of the four states that are possible: normal, highlighted,\n * selected and muted. To style per-column, supply an object. For per-event styling\n * supply a function: `(event, column) => {}` The functon should return a style object.\n *\n * See the `style` prop in the API documentation for more information.\n *\n * Separately the size of the bars can be controlled with the `spacing` and\n * `offset` props. Spacing controls the gap between the bars. Offset moves the\n * bars left or right by the given number of pixels. You can use this to place\n * bars along side each other. Alternatively, you can give each column a fixed width\n * using the `size` prop. In this case this size will be used in preference to the size\n * determined from the timerange of the event and the `spacing`.\n *\n * The info box is also able to be styled using `infoStyle`, `stemStyle` and\n * `markerStyle` This enables you to control the drawing of the box, the connecting\n * lines (stem) and dot respectively. Using the `infoWidth` and `infoHeight`\n * props you can control the size of the box, which is fixed. For the info inside\n * the box, it's up to you: it can either be a simple string or an array of\n * {label, value} pairs.\n */\n\nvar BarChart = function (_React$Component) {\n    _inherits(BarChart, _React$Component);\n\n    function BarChart() {\n        _classCallCheck(this, BarChart);\n\n        return _possibleConstructorReturn(this, (BarChart.__proto__ || Object.getPrototypeOf(BarChart)).apply(this, arguments));\n    }\n\n    _createClass(BarChart, [{\n        key: \"handleHover\",\n        value: function handleHover(e, event, column) {\n            var bar = { event: event, column: column };\n            if (this.props.onHighlightChange) {\n                this.props.onHighlightChange(bar);\n            }\n        }\n    }, {\n        key: \"handleHoverLeave\",\n        value: function handleHoverLeave() {\n            if (this.props.onHighlightChange) {\n                this.props.onHighlightChange(null);\n            }\n        }\n    }, {\n        key: \"handleClick\",\n        value: function handleClick(e, event, column) {\n            var bar = { event: event, column: column };\n            if (this.props.onSelectionChange) {\n                this.props.onSelectionChange(bar);\n            }\n            e.stopPropagation();\n        }\n    }, {\n        key: \"providedStyleMap\",\n        value: function providedStyleMap(column, event) {\n            var style = {};\n            if (this.props.style) {\n                if (this.props.style instanceof _styler.Styler) {\n                    style = this.props.style.barChartStyle()[column];\n                } else if (_underscore2.default.isFunction(this.props.style)) {\n                    style = this.props.style(column, event);\n                } else if (_underscore2.default.isObject(this.props.style)) {\n                    style = this.props.style ? this.props.style[column] : defaultStyle;\n                }\n            }\n            return style;\n        }\n\n        /**\n         * Returns the style used for drawing the path\n         */\n\n    }, {\n        key: \"style\",\n        value: function style(column, event) {\n            var style = void 0;\n            var styleMap = this.providedStyleMap(column, event);\n\n            var isHighlighted = this.props.highlighted && (column === this.props.highlighted.column && _pondjs.Event.is(this.props.highlighted.event, event) || this.props.highlightEntireEvent && _pondjs.Event.is(this.props.highlighted.event, event));\n\n            var isSelected = this.props.selected && column === this.props.selected.column && _pondjs.Event.is(this.props.selected.event, event);\n\n            if (this.props.selected) {\n                if (isSelected) {\n                    style = (0, _merge2.default)(true, defaultStyle.selected, styleMap.selected ? styleMap.selected : {});\n                } else if (isHighlighted) {\n                    style = (0, _merge2.default)(true, defaultStyle.highlighted, styleMap.highlighted ? styleMap.highlighted : {});\n                } else {\n                    style = (0, _merge2.default)(true, defaultStyle.muted, styleMap.muted ? styleMap.muted : {});\n                }\n            } else if (isHighlighted) {\n                style = (0, _merge2.default)(true, defaultStyle.highlighted, styleMap.highlighted ? styleMap.highlighted : {});\n            } else {\n                style = (0, _merge2.default)(true, defaultStyle.normal, styleMap.normal ? styleMap.normal : {});\n            }\n\n            return style;\n        }\n    }, {\n        key: \"renderBars\",\n        value: function renderBars() {\n            var _this2 = this;\n\n            var spacing = +this.props.spacing;\n            var offset = +this.props.offset;\n            var minBarHeight = this.props.minBarHeight;\n            var series = this.props.series;\n            var timeScale = this.props.timeScale;\n            var yScale = this.props.yScale;\n            var columns = this.props.columns || [\"value\"];\n\n            var bars = [];\n            var eventMarker = void 0;\n\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                var _loop = function _loop() {\n                    var event = _step.value;\n\n                    var begin = event.begin();\n                    var end = event.end();\n                    var beginPos = timeScale(begin) + spacing;\n                    var endPos = timeScale(end) - spacing;\n\n                    var width = void 0;\n                    if (_this2.props.size) {\n                        width = _this2.props.size;\n                    } else {\n                        width = endPos - beginPos;\n                    }\n\n                    if (width < 1) {\n                        width = 1;\n                    }\n\n                    var x = void 0;\n                    if (_this2.props.size) {\n                        var center = timeScale(begin) + (timeScale(end) - timeScale(begin)) / 2;\n                        x = center - _this2.props.size / 2 + offset;\n                    } else {\n                        x = timeScale(begin) + spacing + offset;\n                    }\n\n                    var yBase = yScale(0);\n                    var yposPositive = yBase;\n                    var yposNegative = yBase;\n                    if (columns) {\n                        var _iteratorNormalCompletion2 = true;\n                        var _didIteratorError2 = false;\n                        var _iteratorError2 = undefined;\n\n                        try {\n                            var _loop2 = function _loop2() {\n                                var column = _step2.value;\n\n                                var index = event.index();\n                                var key = series.name() + \"-\" + index + \"-\" + column;\n                                var value = event.get(column);\n                                var style = _this2.style(column, event);\n\n                                var height = yScale(0) - yScale(value);\n                                // Allow negative values. Minimum bar height = 1 pixel.\n                                // Stack negative bars below X-axis and positive above X-Axis\n                                var positiveBar = height >= 0;\n                                height = Math.max(Math.abs(height), minBarHeight);\n                                var y = positiveBar ? yposPositive - height : yposNegative;\n\n                                // Don't draw a rect when height and minBarHeight are both 0\n                                if (height === 0) return \"break\";\n\n                                // Event marker if info provided and hovering\n                                var isHighlighted = _this2.props.highlighted && column === _this2.props.highlighted.column && _pondjs.Event.is(_this2.props.highlighted.event, event);\n                                if (isHighlighted && _this2.props.info) {\n                                    eventMarker = _react2.default.createElement(_EventMarker2.default, _extends({}, _this2.props, {\n                                        event: event,\n                                        column: column,\n                                        offsetX: offset,\n                                        offsetY: yBase - (positiveBar ? yposPositive : yposNegative)\n                                    }));\n                                }\n\n                                var box = { x: x, y: y, width: width, height: height };\n                                var barProps = _extends({ key: key }, box, { style: style });\n\n                                if (_this2.props.onSelectionChange) {\n                                    barProps.onClick = function (e) {\n                                        return _this2.handleClick(e, event, column);\n                                    };\n                                }\n                                if (_this2.props.onHighlightChange) {\n                                    barProps.onMouseMove = function (e) {\n                                        return _this2.handleHover(e, event, column);\n                                    };\n                                    barProps.onMouseLeave = function () {\n                                        return _this2.handleHoverLeave();\n                                    };\n                                }\n\n                                bars.push(_react2.default.createElement(\"rect\", barProps));\n\n                                if (positiveBar) {\n                                    yposPositive -= height;\n                                } else {\n                                    yposNegative += height;\n                                }\n                            };\n\n                            for (var _iterator2 = columns[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                                var _ret2 = _loop2();\n\n                                if (_ret2 === \"break\") break;\n                            }\n                        } catch (err) {\n                            _didIteratorError2 = true;\n                            _iteratorError2 = err;\n                        } finally {\n                            try {\n                                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                                    _iterator2.return();\n                                }\n                            } finally {\n                                if (_didIteratorError2) {\n                                    throw _iteratorError2;\n                                }\n                            }\n                        }\n                    }\n                };\n\n                for (var _iterator = series.events()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    _loop();\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            return _react2.default.createElement(\n                \"g\",\n                null,\n                bars,\n                eventMarker\n            );\n        }\n    }, {\n        key: \"render\",\n        value: function render() {\n            return _react2.default.createElement(\n                \"g\",\n                null,\n                this.renderBars()\n            );\n        }\n    }]);\n\n    return BarChart;\n}(_react2.default.Component);\n\nexports.default = BarChart;\n\n\nBarChart.propTypes = {\n    /**\n     * Show or hide this chart\n     */\n    visible: _propTypes2.default.bool,\n\n    /**\n     * What [Pond TimeSeries](https://esnet-pondjs.appspot.com/#/timeseries)\n     * data to visualize\n     */\n    series: _propTypes2.default.instanceOf(_pondjs.TimeSeries).isRequired,\n\n    /**\n     * The distance in pixels to inset the bar chart from its actual timerange\n     */\n    spacing: _propTypes2.default.number,\n\n    /**\n     * The distance in pixels to offset the bar from its center position within the timerange\n     * it represents\n     */\n    offset: _propTypes2.default.number,\n\n    /**\n     * The minimum height of a bar given in pixels.\n     * By default, the minimum height of a bar is 1 pixel\n     */\n    minBarHeight: _propTypes2.default.number,\n\n    /**\n     * A list of columns within the series that will be stacked on top of each other\n     *\n     * NOTE : Columns can't have periods because periods\n     * represent a path to deep data in the underlying events\n     * (i.e. reference into nested data structures)\n     */\n    columns: _propTypes2.default.arrayOf(_propTypes2.default.string),\n\n    /**\n     * When true, the entire `highlighted` event will be highlighted, instead of\n     * only the column bar that's currently being hovered\n     */\n    highlightEntireEvent: _propTypes2.default.bool,\n\n    /**\n     * The style of the bar chart drawing (using SVG CSS properties).\n     * This is an object with a key for each column which is being drawn,\n     * per the `columns` prop. For each column a style is defined for\n     * each state the bar may be in. This style is the CSS properties for\n     * the underlying SVG <Rect>, so most likely you'll define fill and\n     * opacity.\n     *\n     * For example:\n     * ```\n     * style = {\n     *     columnName: {\n     *         normal: {\n     *             fill: \"steelblue\",\n     *             opacity: 0.8,\n     *         },\n     *         highlighted: {\n     *             fill: \"#a7c4dd\",\n     *             opacity: 1.0,\n     *         },\n     *         selected: {\n     *             fill: \"orange\",\n     *             opacity: 1.0,\n     *         },\n     *         muted: {\n     *             fill: \"grey\",\n     *             opacity: 0.5\n     *         }\n     *     }\n     * }\n     * ```\n     *\n     * You can also supply a function, which will be called with an event\n     * and column. The function should return an object containing the\n     * four states (normal, highlighted, selected and muted) and the corresponding\n     * CSS properties.\n     */\n    style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func, _propTypes2.default.instanceOf(_styler.Styler)]),\n\n    /**\n     * The values to show in the info box. This is an array of\n     * objects, with each object specifying the label and value\n     * to be shown in the info box.\n     */\n    info: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n        label: _propTypes2.default.string, //eslint-disable-line\n        value: _propTypes2.default.string //eslint-disable-line\n    })),\n\n    /**\n     * The style of the info box itself. Typically you'd want to\n     * specify a fill color, and stroke color / width here.\n     */\n    infoStyle: _propTypes2.default.object, //eslint-disable-line\n\n    /**\n     * The width of the info box\n     */\n    infoWidth: _propTypes2.default.number, //eslint-disable-line\n\n    /**\n     * The height of the info box\n     */\n    infoHeight: _propTypes2.default.number, //eslint-disable-line\n\n    /**\n     * The vertical offset in pixels of the EventMarker info box from the\n     * top of the chart.\n     */\n    infoOffsetY: _propTypes2.default.number,\n\n    /**\n     * Alter the format of the timestamp shown on the info box.\n     * This may be either a function or a string. If you provide a function\n     * that will be passed an Index and should return a string. For example:\n     * ```\n     *     index => moment(index.begin()).format(\"Do MMM 'YY\")\n     * ```\n     * Alternatively you can pass in a d3 format string. That will be applied\n     * to the begin time of the Index range.\n     */\n    infoTimeFormat: _propTypes2.default.oneOfType([\n    //eslint-disable-line\n    _propTypes2.default.string, //eslint-disable-line\n    _propTypes2.default.func //eslint-disable-line\n    ]),\n\n    /**\n     * The radius of the infoBox dot at the end of the marker\n     */\n    markerRadius: _propTypes2.default.number,\n\n    /**\n     * The style of the infoBox dot at the end of the marker\n     */\n    markerStyle: _propTypes2.default.object,\n\n    /**\n     * If size is specified, then the bar will be this number of pixels wide. This\n     * prop takes priority over \"spacing\".\n     */\n    size: _propTypes2.default.number,\n\n    /**\n     * The selected item, which will be rendered in the \"selected\" style.\n     * If a bar is selected, all other bars will be rendered in the \"muted\" style.\n     *\n     * See also `onSelectionChange`\n     */\n    selected: _propTypes2.default.shape({\n        event: _propTypes2.default.instanceOf(_pondjs.IndexedEvent),\n        column: _propTypes2.default.string\n    }),\n\n    /**\n     * A callback that will be called when the selection changes. It will be called\n     * with an object containing the event and column.\n     */\n    onSelectionChange: _propTypes2.default.func,\n\n    /**\n     * The highlighted item, which will be rendered in the \"highlighted\" style.\n     *\n     * See also `onHighlightChange`\n     */\n    highlighted: _propTypes2.default.shape({\n        event: _propTypes2.default.instanceOf(_pondjs.IndexedEvent),\n        column: _propTypes2.default.string\n    }),\n\n    /**\n     * A callback that will be called when the hovered over bar changes.\n     * It will be called with an object containing the event and column.\n     */\n    onHighlightChange: _propTypes2.default.func,\n\n    /**\n     * [Internal] The timeScale supplied by the surrounding ChartContainer\n     */\n    timeScale: _propTypes2.default.func,\n\n    /**\n     * [Internal] The yScale supplied by the associated YAxis\n     */\n    yScale: _propTypes2.default.func\n};\n\nBarChart.defaultProps = {\n    visible: true,\n    columns: [\"value\"],\n    highlightEntireEvent: false,\n    spacing: 1.0,\n    offset: 0,\n    minBarHeight: 1,\n    infoStyle: {\n        stroke: \"#999\",\n        fill: \"white\",\n        opacity: 0.9,\n        pointerEvents: \"none\"\n    },\n    stemStyle: {\n        stroke: \"#999\",\n        cursor: \"crosshair\",\n        pointerEvents: \"none\"\n    },\n    markerStyle: {\n        fill: \"#999\"\n    },\n    markerRadius: 2,\n    infoWidth: 90,\n    infoHeight: 30,\n    infoOffsetY: 20\n};"]},"metadata":{},"sourceType":"script"}