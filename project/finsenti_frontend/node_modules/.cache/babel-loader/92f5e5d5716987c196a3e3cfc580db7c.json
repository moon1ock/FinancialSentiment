{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _collector = _interopRequireDefault(require(\"../collector\"));\n\nvar _pipelineout = _interopRequireDefault(require(\"./pipelineout\"));\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n\nclass CollectionOut extends _pipelineout.default {\n  constructor(pipeline, options, callback) {\n    super(pipeline);\n    this._callback = callback;\n    this._collector = new _collector.default({\n      windowType: pipeline.getWindowType(),\n      windowDuration: pipeline.getWindowDuration(),\n      groupBy: pipeline.getGroupBy(),\n      emitOn: pipeline.getEmitOn()\n    }, (collection, windowKey, groupByKey) => {\n      var groupBy = groupByKey ? groupByKey : \"all\";\n\n      if (this._callback) {\n        this._callback(collection, windowKey, groupBy);\n      } else {\n        var keys = [];\n\n        if (windowKey !== \"global\") {\n          keys.push(windowKey);\n        }\n\n        if (groupBy !== \"all\") {\n          keys.push(groupBy);\n        }\n\n        var k = keys.length > 0 ? keys.join(\"--\") : \"all\";\n\n        this._pipeline.addResult(k, collection);\n      }\n    });\n  }\n\n  addEvent(event) {\n    this._collector.addEvent(event);\n  }\n\n  onEmit(cb) {\n    this._callback = cb;\n  }\n\n  flush() {\n    this._collector.flushCollections();\n\n    if (!this._callback) {\n      this._pipeline.resultsDone();\n    }\n  }\n\n}\n\nvar _default = CollectionOut;\nexports.default = _default;","map":{"version":3,"sources":["/Users/nicholasraffone/Documents/swefall2021/finalproj/FinancialSentiment/fin_sentiment_front/node_modules/pondjs/lib/lib/io/collectionout.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_collector","_pipelineout","CollectionOut","constructor","pipeline","options","callback","_callback","windowType","getWindowType","windowDuration","getWindowDuration","groupBy","getGroupBy","emitOn","getEmitOn","collection","windowKey","groupByKey","keys","push","k","length","join","_pipeline","addResult","addEvent","event","onEmit","cb","flush","flushCollections","resultsDone","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,UAAU,GAAGP,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAAvC;;AAEA,IAAIO,YAAY,GAAGR,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMQ,aAAN,SAA4BD,YAAY,CAACF,OAAzC,CAAiD;AAC/CI,EAAAA,WAAW,CAACC,QAAD,EAAWC,OAAX,EAAoBC,QAApB,EAA8B;AACvC,UAAMF,QAAN;AACA,SAAKG,SAAL,GAAiBD,QAAjB;AACA,SAAKN,UAAL,GAAkB,IAAIA,UAAU,CAACD,OAAf,CAAuB;AACvCS,MAAAA,UAAU,EAAEJ,QAAQ,CAACK,aAAT,EAD2B;AAEvCC,MAAAA,cAAc,EAAEN,QAAQ,CAACO,iBAAT,EAFuB;AAGvCC,MAAAA,OAAO,EAAER,QAAQ,CAACS,UAAT,EAH8B;AAIvCC,MAAAA,MAAM,EAAEV,QAAQ,CAACW,SAAT;AAJ+B,KAAvB,EAKf,CAACC,UAAD,EAAaC,SAAb,EAAwBC,UAAxB,KAAuC;AACxC,UAAIN,OAAO,GAAGM,UAAU,GAAGA,UAAH,GAAgB,KAAxC;;AAEA,UAAI,KAAKX,SAAT,EAAoB;AAClB,aAAKA,SAAL,CAAeS,UAAf,EAA2BC,SAA3B,EAAsCL,OAAtC;AACD,OAFD,MAEO;AACL,YAAIO,IAAI,GAAG,EAAX;;AAEA,YAAIF,SAAS,KAAK,QAAlB,EAA4B;AAC1BE,UAAAA,IAAI,CAACC,IAAL,CAAUH,SAAV;AACD;;AAED,YAAIL,OAAO,KAAK,KAAhB,EAAuB;AACrBO,UAAAA,IAAI,CAACC,IAAL,CAAUR,OAAV;AACD;;AAED,YAAIS,CAAC,GAAGF,IAAI,CAACG,MAAL,GAAc,CAAd,GAAkBH,IAAI,CAACI,IAAL,CAAU,IAAV,CAAlB,GAAoC,KAA5C;;AAEA,aAAKC,SAAL,CAAeC,SAAf,CAAyBJ,CAAzB,EAA4BL,UAA5B;AACD;AACF,KAzBiB,CAAlB;AA0BD;;AAEDU,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,SAAK3B,UAAL,CAAgB0B,QAAhB,CAAyBC,KAAzB;AACD;;AAEDC,EAAAA,MAAM,CAACC,EAAD,EAAK;AACT,SAAKtB,SAAL,GAAiBsB,EAAjB;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,SAAK9B,UAAL,CAAgB+B,gBAAhB;;AAEA,QAAI,CAAC,KAAKxB,SAAV,EAAqB;AACnB,WAAKiB,SAAL,CAAeQ,WAAf;AACD;AACF;;AA9C8C;;AAkDjD,IAAIC,QAAQ,GAAG/B,aAAf;AACAL,OAAO,CAACE,OAAR,GAAkBkC,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _collector = _interopRequireDefault(require(\"../collector\"));\n\nvar _pipelineout = _interopRequireDefault(require(\"./pipelineout\"));\n\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\nclass CollectionOut extends _pipelineout.default {\n  constructor(pipeline, options, callback) {\n    super(pipeline);\n    this._callback = callback;\n    this._collector = new _collector.default({\n      windowType: pipeline.getWindowType(),\n      windowDuration: pipeline.getWindowDuration(),\n      groupBy: pipeline.getGroupBy(),\n      emitOn: pipeline.getEmitOn()\n    }, (collection, windowKey, groupByKey) => {\n      var groupBy = groupByKey ? groupByKey : \"all\";\n\n      if (this._callback) {\n        this._callback(collection, windowKey, groupBy);\n      } else {\n        var keys = [];\n\n        if (windowKey !== \"global\") {\n          keys.push(windowKey);\n        }\n\n        if (groupBy !== \"all\") {\n          keys.push(groupBy);\n        }\n\n        var k = keys.length > 0 ? keys.join(\"--\") : \"all\";\n\n        this._pipeline.addResult(k, collection);\n      }\n    });\n  }\n\n  addEvent(event) {\n    this._collector.addEvent(event);\n  }\n\n  onEmit(cb) {\n    this._callback = cb;\n  }\n\n  flush() {\n    this._collector.flushCollections();\n\n    if (!this._callback) {\n      this._pipeline.resultsDone();\n    }\n  }\n\n}\n\nvar _default = CollectionOut;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}