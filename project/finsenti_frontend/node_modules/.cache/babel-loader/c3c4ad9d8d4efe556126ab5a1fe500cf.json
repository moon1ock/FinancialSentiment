{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _processor = _interopRequireDefault(require(\"./processor\"));\n\nvar _event = _interopRequireDefault(require(\"../event\"));\n\nvar _pipeline = require(\"../pipeline\");\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/**\n * A processor which takes a fieldSpec as its only argument\n * and returns a new event with only those selected columns\n */\n\n\nclass Selector extends _processor.default {\n  constructor(arg1, options) {\n    super(arg1, options);\n\n    if (arg1 instanceof Selector) {\n      var other = arg1;\n      this._fieldSpec = other._fieldSpec;\n    } else if ((0, _pipeline.isPipeline)(arg1)) {\n      this._fieldSpec = options.fieldSpec;\n    } else {\n      throw new Error(\"Unknown arg to filter constructor\", arg1);\n    }\n  }\n\n  clone() {\n    return new Selector(this);\n  }\n\n  addEvent(event) {\n    if (this.hasObservers()) {\n      this.emit(_event.default.selector(event, this._fieldSpec));\n    }\n  }\n\n}\n\nexports.default = Selector;","map":{"version":3,"sources":["/Users/nicholasraffone/Documents/swefall2021/finalproj/FinancialSentiment/fin_sentiment_front/node_modules/pondjs/lib/lib/processors/selector.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_processor","_event","_pipeline","Selector","constructor","arg1","options","other","_fieldSpec","isPipeline","fieldSpec","Error","clone","addEvent","event","hasObservers","emit","selector"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,UAAU,GAAGP,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAvC;;AAEA,IAAIO,MAAM,GAAGR,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAAnC;;AAEA,IAAIQ,SAAS,GAAGR,OAAO,CAAC,aAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACA,MAAMS,QAAN,SAAuBH,UAAU,CAACD,OAAlC,CAA0C;AACxCK,EAAAA,WAAW,CAACC,IAAD,EAAOC,OAAP,EAAgB;AACzB,UAAMD,IAAN,EAAYC,OAAZ;;AAEA,QAAID,IAAI,YAAYF,QAApB,EAA8B;AAC5B,UAAII,KAAK,GAAGF,IAAZ;AACA,WAAKG,UAAL,GAAkBD,KAAK,CAACC,UAAxB;AACD,KAHD,MAGO,IAAI,CAAC,GAAGN,SAAS,CAACO,UAAd,EAA0BJ,IAA1B,CAAJ,EAAqC;AAC1C,WAAKG,UAAL,GAAkBF,OAAO,CAACI,SAA1B;AACD,KAFM,MAEA;AACL,YAAM,IAAIC,KAAJ,CAAU,mCAAV,EAA+CN,IAA/C,CAAN;AACD;AACF;;AAEDO,EAAAA,KAAK,GAAG;AACN,WAAO,IAAIT,QAAJ,CAAa,IAAb,CAAP;AACD;;AAEDU,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,QAAI,KAAKC,YAAL,EAAJ,EAAyB;AACvB,WAAKC,IAAL,CAAUf,MAAM,CAACF,OAAP,CAAekB,QAAf,CAAwBH,KAAxB,EAA+B,KAAKN,UAApC,CAAV;AACD;AACF;;AAtBuC;;AA0B1CX,OAAO,CAACE,OAAR,GAAkBI,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _processor = _interopRequireDefault(require(\"./processor\"));\n\nvar _event = _interopRequireDefault(require(\"../event\"));\n\nvar _pipeline = require(\"../pipeline\");\n\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/**\n * A processor which takes a fieldSpec as its only argument\n * and returns a new event with only those selected columns\n */\nclass Selector extends _processor.default {\n  constructor(arg1, options) {\n    super(arg1, options);\n\n    if (arg1 instanceof Selector) {\n      var other = arg1;\n      this._fieldSpec = other._fieldSpec;\n    } else if ((0, _pipeline.isPipeline)(arg1)) {\n      this._fieldSpec = options.fieldSpec;\n    } else {\n      throw new Error(\"Unknown arg to filter constructor\", arg1);\n    }\n  }\n\n  clone() {\n    return new Selector(this);\n  }\n\n  addEvent(event) {\n    if (this.hasObservers()) {\n      this.emit(_event.default.selector(event, this._fieldSpec));\n    }\n  }\n\n}\n\nexports.default = Selector;"]},"metadata":{},"sourceType":"script"}