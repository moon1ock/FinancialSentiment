{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nrequire(\"array.prototype.fill\");\n\nvar _underscore = require(\"underscore\");\n\nvar _underscore2 = _interopRequireDefault(_underscore);\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar _merge = require(\"merge\");\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _pondjs = require(\"pondjs\");\n\nvar _util = require(\"../js/util\");\n\nvar _styler = require(\"../js/styler\");\n\nvar _curve = require(\"../js/curve\");\n\nvar _curve2 = _interopRequireDefault(_curve);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n *  Copyright (c) 2015-present, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n\nvar defaultStyle = {\n  line: {\n    normal: {\n      stroke: \"steelblue\",\n      fill: \"none\",\n      strokeWidth: 1\n    },\n    highlighted: {\n      stroke: \"#5a98cb\",\n      fill: \"none\",\n      strokeWidth: 1\n    },\n    selected: {\n      stroke: \"steelblue\",\n      fill: \"none\",\n      strokeWidth: 1\n    },\n    muted: {\n      stroke: \"steelblue\",\n      fill: \"none\",\n      opacity: 0.4,\n      strokeWidth: 1\n    }\n  },\n  area: {\n    normal: {\n      fill: \"steelblue\",\n      stroke: \"none\",\n      opacity: 0.75\n    },\n    highlighted: {\n      fill: \"#5a98cb\",\n      stroke: \"none\",\n      opacity: 0.75\n    },\n    selected: {\n      fill: \"steelblue\",\n      stroke: \"none\",\n      opacity: 0.75\n    },\n    muted: {\n      fill: \"steelblue\",\n      stroke: \"none\",\n      opacity: 0.25\n    }\n  }\n};\n/**\n * The `<AreaChart>` component is able to display single or multiple stacked\n * areas above or below the axis. It used throughout the\n * [My ESnet Portal](http://my.es.net).\n\n * The `<AreaChart>` should be used within a `<ChartContainer>` structure,\n * as this will construct the horizontal and vertical axis, and manage\n * other elements. Here is an example of an `<AreaChart>` with an up and down\n * network traffic visualization:\n *\n *  ```\n *   render() {\n *      return (\n *          ...\n *          <ChartContainer timeRange={trafficSeries.timerange()} width=\"1080\">\n *              <ChartRow height=\"150\">\n *                  <Charts>\n *                      <AreaChart\n *                          axis=\"traffic\"\n *                          series={trafficSeries}\n *                          columns={{up: [\"in\"], down: [\"out\"]}}\n *                       />\n *                  </Charts>\n *                  <YAxis\n *                      id=\"traffic\"\n *                      label=\"Traffic (bps)\"\n *                      min={-max} max={max}\n *                      absolute={true}\n *                      width=\"60\"\n *                      type=\"linear\"\n *                  />\n *              </ChartRow>\n *          </ChartContainer>\n *          ...\n *      );\n *  }\n *  ```\n * The `<AreaChart>` takes a single `TimeSeries` object into its `series` prop. This\n * series can contain multiple columns and those columns can be referenced using the `columns`\n * prop. The `columns` props allows you to map columns in the series to the chart,\n * letting you specify the stacking and orientation of the data. In the above example\n * we map the \"in\" column in `trafficSeries` to the up direction and the \"out\" column to\n * the down direction. Each direction is specified as an array, so adding multiple\n * columns into a direction will stack the areas in that direction.\n *\n * Note: It is recommended that `<ChartContainer>`s be placed within a <Resizable> tag,\n * rather than hard coding the width as in the above example.\n * \n * Note 2 : Columns can't have periods because periods represent a path to deep data \n * in the underlying events (i.e. reference into nested data structures)\n * \n */\n\nvar AreaChart = function (_React$Component) {\n  _inherits(AreaChart, _React$Component);\n\n  function AreaChart() {\n    _classCallCheck(this, AreaChart);\n\n    return _possibleConstructorReturn(this, (AreaChart.__proto__ || Object.getPrototypeOf(AreaChart)).apply(this, arguments));\n  }\n\n  _createClass(AreaChart, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var newSeries = nextProps.series;\n      var oldSeries = this.props.series;\n      var width = nextProps.width;\n      var timeScale = nextProps.timeScale;\n      var yScale = nextProps.yScale;\n      var interpolation = nextProps.interpolation;\n      var columns = nextProps.columns;\n      var style = nextProps.style;\n      var highlight = nextProps.highlight;\n      var selection = nextProps.selection;\n      var widthChanged = this.props.width !== width;\n      var timeScaleChanged = (0, _util.scaleAsString)(this.props.timeScale) !== (0, _util.scaleAsString)(timeScale);\n      var yAxisScaleChanged = this.props.yScale !== yScale;\n      var interpolationChanged = this.props.interpolation !== interpolation;\n      var columnsChanged = JSON.stringify(this.props.columns) !== JSON.stringify(columns);\n      var styleChanged = JSON.stringify(this.props.style) !== JSON.stringify(style);\n      var highlightChanged = this.props.highlight !== highlight;\n      var selectionChanged = this.props.selection !== selection;\n      var seriesChanged = false;\n\n      if (oldSeries.size() !== newSeries.size()) {\n        seriesChanged = true;\n      } else {\n        seriesChanged = !_pondjs.TimeSeries.is(oldSeries, newSeries);\n      }\n\n      return seriesChanged || timeScaleChanged || widthChanged || interpolationChanged || columnsChanged || styleChanged || yAxisScaleChanged || highlightChanged || selectionChanged;\n    }\n  }, {\n    key: \"handleHover\",\n    value: function handleHover(e, column) {\n      if (this.props.onHighlightChange) {\n        this.props.onHighlightChange(column);\n      }\n    }\n  }, {\n    key: \"handleHoverLeave\",\n    value: function handleHoverLeave() {\n      if (this.props.onHighlightChange) {\n        this.props.onHighlightChange(null);\n      }\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e, column) {\n      e.stopPropagation();\n\n      if (this.props.onSelectionChange) {\n        this.props.onSelectionChange(column);\n      }\n    }\n  }, {\n    key: \"providedAreaStyleMap\",\n    value: function providedAreaStyleMap(column) {\n      var style = {};\n\n      if (this.props.style) {\n        if (this.props.style instanceof _styler.Styler) {\n          style = this.props.style.areaChartStyle()[column];\n        } else if (_underscore2.default.isFunction(this.props.style)) {\n          style = this.props.style(column);\n        } else if (_underscore2.default.isObject(this.props.style)) {\n          style = this.props.style ? this.props.style[column] : defaultStyle;\n        }\n      }\n\n      return style;\n    }\n    /**\n     * Returns the style used for drawing the path\n     */\n\n  }, {\n    key: \"style\",\n    value: function style(column, type) {\n      var style = void 0;\n      var styleMap = this.providedAreaStyleMap(column);\n      var isHighlighted = this.props.highlight && column === this.props.highlight;\n      var isSelected = this.props.selection && column === this.props.selection;\n\n      if (!_underscore2.default.has(styleMap, \"line\")) {\n        console.error(\"Provided style for AreaChart does not define a style for the outline:\", styleMap, column);\n      }\n\n      if (!_underscore2.default.has(styleMap, \"area\")) {\n        console.error(\"Provided style for AreaChart does not define a style for the area:\", styleMap);\n      }\n\n      if (this.props.selection) {\n        if (isSelected) {\n          style = (0, _merge2.default)(true, defaultStyle[type].selected, styleMap[type].selected ? styleMap[type].selected : {});\n        } else if (isHighlighted) {\n          style = (0, _merge2.default)(true, defaultStyle[type].highlighted, styleMap[type].highlighted ? styleMap[type].highlighted : {});\n        } else {\n          style = (0, _merge2.default)(true, defaultStyle[type].muted, styleMap[type].muted ? styleMap[type].muted : {});\n        }\n      } else if (isHighlighted) {\n        style = (0, _merge2.default)(true, defaultStyle[type].highlighted, styleMap[type].highlighted ? styleMap[type].highlighted : {});\n      } else {\n        style = (0, _merge2.default)(true, defaultStyle[type].normal, styleMap[type].normal ? styleMap[type].normal : {});\n      }\n\n      return style;\n    }\n  }, {\n    key: \"pathStyle\",\n    value: function pathStyle(column) {\n      return this.style(column, \"line\");\n    }\n  }, {\n    key: \"areaStyle\",\n    value: function areaStyle(column) {\n      return this.style(column, \"area\");\n    }\n  }, {\n    key: \"renderArea\",\n    value: function renderArea(data, column, key) {\n      var _this2 = this; // Use D3 to build an area generation function\n\n\n      var style = this.areaStyle(column);\n      var pathStyle = this.pathStyle(column);\n      var areaGenerator = (0, _d3Shape.area)().curve(_curve2.default[this.props.interpolation]).x(function (d) {\n        return d.x0;\n      }).y0(function (d) {\n        return d.y0;\n      }).y1(function (d) {\n        return d.y1;\n      }); // Use the area generation function with our stacked data\n      // to get an SVG path\n\n      var areaPath = areaGenerator(data); // Outline the top of the curve\n\n      var lineGenerator = (0, _d3Shape.line)().curve(_curve2.default[this.props.interpolation]).x(function (d) {\n        return d.x0;\n      }).y(function (d) {\n        return d.y1;\n      });\n      var outlinePath = lineGenerator(data);\n      return _react2.default.createElement(\"g\", {\n        key: \"area-\" + key\n      }, _react2.default.createElement(\"path\", {\n        d: areaPath,\n        style: style\n      }), _react2.default.createElement(\"path\", {\n        d: areaPath,\n        style: style,\n        onClick: function onClick(e) {\n          return _this2.handleClick(e, column);\n        },\n        onMouseLeave: function onMouseLeave() {\n          return _this2.handleHoverLeave();\n        },\n        onMouseMove: function onMouseMove(e) {\n          return _this2.handleHover(e, column);\n        }\n      }), _react2.default.createElement(\"path\", {\n        d: outlinePath,\n        style: pathStyle,\n        onClick: function onClick(e) {\n          return _this2.handleClick(e, column);\n        },\n        onMouseLeave: function onMouseLeave() {\n          return _this2.handleHoverLeave();\n        },\n        onMouseMove: function onMouseMove(e) {\n          return _this2.handleHover(e, column);\n        }\n      }));\n    }\n  }, {\n    key: \"renderPaths\",\n    value: function renderPaths(columnList, direction) {\n      var _this3 = this;\n\n      var dir = direction === \"up\" ? 1 : -1;\n      var size = this.props.series.size();\n      var offsets = new Array(size).fill(0);\n      var len = columnList.length;\n      return columnList.map(function (column, i) {\n        // Stack the series columns to get our data in x0, y0, y1 format\n        var pathAreas = [];\n        var count = 1;\n\n        if (_this3.props.breakArea) {\n          var currentPoints = null;\n\n          for (var j = 0; j < _this3.props.series.size(); j += 1) {\n            var seriesPoint = _this3.props.series.at(j);\n\n            var value = seriesPoint.get(column);\n            var badPoint = _underscore2.default.isNull(value) || _underscore2.default.isNaN(value) || !_underscore2.default.isFinite(value);\n            if (badPoint) value = 0; // Case 1:\n            // When stacking is present with multiple area charts, then mark bad points as 0\n\n            if (len > 1) {\n              if (!currentPoints) currentPoints = [];\n              currentPoints.push({\n                x0: _this3.props.timeScale(seriesPoint.timestamp()),\n                y0: _this3.props.yScale(offsets[j]),\n                y1: _this3.props.yScale(offsets[j] + dir * value)\n              });\n\n              if (_this3.props.stack) {\n                offsets[j] += dir * value;\n              }\n            } // Case Two\n            // When only one area chart is to be drawn, then create different areas for each area and ignore nulls and NaNs\n            else {\n              if (!badPoint) {\n                if (!currentPoints) currentPoints = [];\n                currentPoints.push({\n                  x0: _this3.props.timeScale(seriesPoint.timestamp()),\n                  y0: _this3.props.yScale(offsets[j]),\n                  y1: _this3.props.yScale(offsets[j] + dir * value)\n                });\n\n                if (_this3.props.stack) {\n                  offsets[j] += dir * value;\n                }\n              } else if (currentPoints) {\n                if (currentPoints.length > 1) {\n                  pathAreas.push(_this3.renderArea(currentPoints, column, count));\n                  count += 1;\n                }\n\n                currentPoints = null;\n              }\n            }\n          }\n\n          if (currentPoints && currentPoints.length > 1) {\n            pathAreas.push(_this3.renderArea(currentPoints, column, count));\n            count += 1;\n          }\n        } else {\n          // Ignore nulls and NaNs in the area chart\n          var cleanedPoints = [];\n\n          for (var _j = 0; _j < _this3.props.series.size(); _j += 1) {\n            var _seriesPoint = _this3.props.series.at(_j);\n\n            var _value = _seriesPoint.get(column);\n\n            var _badPoint = _underscore2.default.isNull(_value) || _underscore2.default.isNaN(_value) || !_underscore2.default.isFinite(_value);\n\n            if (!_badPoint) {\n              cleanedPoints.push({\n                x0: _this3.props.timeScale(_seriesPoint.timestamp()),\n                y0: _this3.props.yScale(offsets[_j]),\n                y1: _this3.props.yScale(offsets[_j] + dir * _value)\n              });\n\n              if (_this3.props.stack) {\n                offsets[_j] += dir * _value;\n              }\n            }\n          }\n\n          pathAreas.push(_this3.renderArea(cleanedPoints, column, count));\n          count += 1;\n        }\n\n        return _react2.default.createElement(\"g\", {\n          key: column\n        }, pathAreas);\n      });\n    }\n  }, {\n    key: \"renderAreas\",\n    value: function renderAreas() {\n      var up = this.props.columns.up || [];\n      var down = this.props.columns.down || [];\n      return _react2.default.createElement(\"g\", null, this.renderPaths(up, \"up\"), this.renderPaths(down, \"down\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(\"g\", null, this.renderAreas());\n    }\n  }]);\n\n  return AreaChart;\n}(_react2.default.Component);\n\nexports.default = AreaChart;\nAreaChart.propTypes = {\n  /**\n   * What [Pond TimeSeries](https://esnet-pondjs.appspot.com/#/timeseries) data to visualize\n   */\n  series: _propTypes2.default.instanceOf(_pondjs.TimeSeries).isRequired,\n\n  /**\n   * Reference to the axis which provides the vertical scale for ## drawing. e.g.\n   * specifying axis=\"trafficRate\" would refer the y-scale to the YAxis of id=\"trafficRate\".\n   */\n  axis: _propTypes2.default.string.isRequired,\n  // eslint-disable-line\n\n  /**\n   * Show or hide this chart\n   */\n  visible: _propTypes2.default.bool,\n\n  /**\n   * The series series columns mapped to stacking up and down.\n   * Has the format:\n   * ```\n   *  \"columns\": {\n   *      up: [\"in\", ...],\n   *      down: [\"out\", ...]\n   *  }\n   *  ```\n   * \n   * NOTE : Columns can't have periods because periods \n   * represent a path to deep data in the underlying events \n   * (i.e. reference into nested data structures)\n   */\n  columns: _propTypes2.default.shape({\n    up: _propTypes2.default.arrayOf(_propTypes2.default.string),\n    down: _propTypes2.default.arrayOf(_propTypes2.default.string)\n  }),\n\n  /**\n   * Stack areas on top of each other\n   */\n  stack: _propTypes2.default.bool,\n\n  /**\n   * The styles to apply to the underlying SVG lines. This is a mapping\n   * of column names to objects with style attributes, in the following\n   * format:\n   *\n   * ```\n   * const style = {\n   *     in: {\n   *         line: {\n   *             normal: {stroke: \"steelblue\", fill: \"none\", strokeWidth: 1},\n   *             highlighted: {stroke: \"#5a98cb\", fill: \"none\", strokeWidth: 1},\n   *             selected: {stroke: \"steelblue\", fill: \"none\", strokeWidth: 1},\n   *             muted: {stroke: \"steelblue\", fill: \"none\", opacity: 0.4, strokeWidth: 1}\n   *         },\n   *         area: {\n   *             normal: {fill: \"steelblue\", stroke: \"none\", opacity: 0.75},\n   *             highlighted: {fill: \"#5a98cb\", stroke: \"none\", opacity: 0.75},\n   *             selected: {fill: \"steelblue\", stroke: \"none\", opacity: 0.75},\n   *             muted: {fill: \"steelblue\", stroke: \"none\", opacity: 0.25}\n   *         }\n   *     },\n   *     out: {\n   *         ...\n   *     }\n   * };\n   *\n   * <AreaChart style={style} ... />\n   * ```\n   *\n   * Alternatively, you can pass in a Styler. For example:\n   *\n   * ```\n   * const upDownStyler = styler([\n   *     {key: \"in\", color: \"#C8D5B8\"},\n   *     {key: \"out\", color: \"#9BB8D7\"}\n   * ]);\n   *\n   * <AreaChart columns={[\"in\", \"out\"]} style={upDownStyler} ... />\n   *\n   * ```\n   */\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func, _propTypes2.default.instanceOf(_styler.Styler)]),\n\n  /**\n   * Any of D3's interpolation modes.\n   */\n  interpolation: _propTypes2.default.oneOf([\"curveBasis\", \"curveBasisOpen\", \"curveBundle\", \"curveCardinal\", \"curveCardinalOpen\", \"curveCatmullRom\", \"curveCatmullRomOpen\", \"curveLinear\", \"curveMonotoneX\", \"curveMonotoneY\", \"curveNatural\", \"curveRadial\", \"curveStep\", \"curveStepAfter\", \"curveStepBefore\"]),\n\n  /**\n   * The currenly highlighted column\n   */\n  highlight: _propTypes2.default.string,\n\n  /**\n   * Callback called when the highlight changes, i.e. hover event\n   */\n  onHighlightChange: _propTypes2.default.func,\n\n  /**\n   * The currenly selected column\n   */\n  selection: _propTypes2.default.string,\n\n  /**\n   * Callback called when the selection changes, i.e. area is clicked\n   */\n  onSelectionChange: _propTypes2.default.func,\n\n  /**\n   * [Internal] The timeScale supplied by the surrounding ChartContainer\n   */\n  timeScale: _propTypes2.default.func,\n\n  /**\n   * [Internal] The yScale supplied by the associated YAxis\n   */\n  yScale: _propTypes2.default.func,\n\n  /**\n   * [Internal] The width supplied by the surrounding ChartContainer\n   */\n  width: _propTypes2.default.number,\n\n  /**\n   * The determines how to handle bad/missing values in the supplied\n   * TimeSeries. A missing value can be null or NaN. If breakArea\n   * is set to true then the area chart will be broken on either side of\n   * the bad value(s). If breakArea is false (the default) bad values\n   * are simply removed and the adjoining points are connected.\n   */\n  breakArea: _propTypes2.default.bool\n};\nAreaChart.defaultProps = {\n  visible: true,\n  interpolation: \"curveLinear\",\n  columns: {\n    up: [\"value\"],\n    down: []\n  },\n  stack: true,\n  breakArea: true\n};","map":{"version":3,"sources":["/Users/nicholasraffone/Documents/swefall2021/finalproj/FinancialSentiment/fin_sentiment_front/node_modules/react-timeseries-charts/lib/components/AreaChart.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","require","_underscore","_underscore2","_interopRequireDefault","_d3Shape","_merge","_merge2","_react","_react2","_propTypes","_propTypes2","_pondjs","_util","_styler","_curve","_curve2","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","defaultStyle","line","normal","stroke","fill","strokeWidth","highlighted","selected","muted","opacity","area","AreaChart","_React$Component","getPrototypeOf","apply","arguments","shouldComponentUpdate","nextProps","newSeries","series","oldSeries","width","timeScale","yScale","interpolation","columns","style","highlight","selection","widthChanged","timeScaleChanged","scaleAsString","yAxisScaleChanged","interpolationChanged","columnsChanged","JSON","stringify","styleChanged","highlightChanged","selectionChanged","seriesChanged","size","TimeSeries","is","handleHover","e","column","onHighlightChange","handleHoverLeave","handleClick","stopPropagation","onSelectionChange","providedAreaStyleMap","Styler","areaChartStyle","isFunction","isObject","type","styleMap","isHighlighted","isSelected","has","console","error","pathStyle","areaStyle","renderArea","data","_this2","areaGenerator","curve","x","d","x0","y0","y1","areaPath","lineGenerator","y","outlinePath","createElement","onClick","onMouseLeave","onMouseMove","renderPaths","columnList","direction","_this3","dir","offsets","Array","len","map","pathAreas","count","breakArea","currentPoints","j","seriesPoint","at","get","badPoint","isNull","isNaN","isFinite","push","timestamp","stack","cleanedPoints","_j","_seriesPoint","_value","_badPoint","renderAreas","up","down","render","Component","propTypes","instanceOf","isRequired","axis","string","visible","bool","shape","arrayOf","oneOfType","object","func","oneOf","number","defaultProps"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nrequire(\"array.prototype.fill\");\n\nvar _underscore = require(\"underscore\");\n\nvar _underscore2 = _interopRequireDefault(_underscore);\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar _merge = require(\"merge\");\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _pondjs = require(\"pondjs\");\n\nvar _util = require(\"../js/util\");\n\nvar _styler = require(\"../js/styler\");\n\nvar _curve = require(\"../js/curve\");\n\nvar _curve2 = _interopRequireDefault(_curve);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\nopyright (c) 2015-present, The Regents of the University of California,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  through Lawrence Berkeley National Laboratory (subject to receipt\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  of any required approvals from the U.S. Dept. of Energy).\nll rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhis source code is licensed under the BSD-style license found in the\nfile in the root directory of this source tree.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar defaultStyle = {\n    line: {\n        normal: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 1 },\n        highlighted: { stroke: \"#5a98cb\", fill: \"none\", strokeWidth: 1 },\n        selected: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 1 },\n        muted: { stroke: \"steelblue\", fill: \"none\", opacity: 0.4, strokeWidth: 1 }\n    },\n    area: {\n        normal: { fill: \"steelblue\", stroke: \"none\", opacity: 0.75 },\n        highlighted: { fill: \"#5a98cb\", stroke: \"none\", opacity: 0.75 },\n        selected: { fill: \"steelblue\", stroke: \"none\", opacity: 0.75 },\n        muted: { fill: \"steelblue\", stroke: \"none\", opacity: 0.25 }\n    }\n};\n\n/**\n * The `<AreaChart>` component is able to display single or multiple stacked\n * areas above or below the axis. It used throughout the\n * [My ESnet Portal](http://my.es.net).\n\n * The `<AreaChart>` should be used within a `<ChartContainer>` structure,\n * as this will construct the horizontal and vertical axis, and manage\n * other elements. Here is an example of an `<AreaChart>` with an up and down\n * network traffic visualization:\n *\n *  ```\n *   render() {\n *      return (\n *          ...\n *          <ChartContainer timeRange={trafficSeries.timerange()} width=\"1080\">\n *              <ChartRow height=\"150\">\n *                  <Charts>\n *                      <AreaChart\n *                          axis=\"traffic\"\n *                          series={trafficSeries}\n *                          columns={{up: [\"in\"], down: [\"out\"]}}\n *                       />\n *                  </Charts>\n *                  <YAxis\n *                      id=\"traffic\"\n *                      label=\"Traffic (bps)\"\n *                      min={-max} max={max}\n *                      absolute={true}\n *                      width=\"60\"\n *                      type=\"linear\"\n *                  />\n *              </ChartRow>\n *          </ChartContainer>\n *          ...\n *      );\n *  }\n *  ```\n * The `<AreaChart>` takes a single `TimeSeries` object into its `series` prop. This\n * series can contain multiple columns and those columns can be referenced using the `columns`\n * prop. The `columns` props allows you to map columns in the series to the chart,\n * letting you specify the stacking and orientation of the data. In the above example\n * we map the \"in\" column in `trafficSeries` to the up direction and the \"out\" column to\n * the down direction. Each direction is specified as an array, so adding multiple\n * columns into a direction will stack the areas in that direction.\n *\n * Note: It is recommended that `<ChartContainer>`s be placed within a <Resizable> tag,\n * rather than hard coding the width as in the above example.\n * \n * Note 2 : Columns can't have periods because periods represent a path to deep data \n * in the underlying events (i.e. reference into nested data structures)\n * \n */\n\nvar AreaChart = function (_React$Component) {\n    _inherits(AreaChart, _React$Component);\n\n    function AreaChart() {\n        _classCallCheck(this, AreaChart);\n\n        return _possibleConstructorReturn(this, (AreaChart.__proto__ || Object.getPrototypeOf(AreaChart)).apply(this, arguments));\n    }\n\n    _createClass(AreaChart, [{\n        key: \"shouldComponentUpdate\",\n        value: function shouldComponentUpdate(nextProps) {\n            var newSeries = nextProps.series;\n            var oldSeries = this.props.series;\n            var width = nextProps.width;\n            var timeScale = nextProps.timeScale;\n            var yScale = nextProps.yScale;\n            var interpolation = nextProps.interpolation;\n            var columns = nextProps.columns;\n            var style = nextProps.style;\n            var highlight = nextProps.highlight;\n            var selection = nextProps.selection;\n\n            var widthChanged = this.props.width !== width;\n            var timeScaleChanged = (0, _util.scaleAsString)(this.props.timeScale) !== (0, _util.scaleAsString)(timeScale);\n            var yAxisScaleChanged = this.props.yScale !== yScale;\n            var interpolationChanged = this.props.interpolation !== interpolation;\n            var columnsChanged = JSON.stringify(this.props.columns) !== JSON.stringify(columns);\n            var styleChanged = JSON.stringify(this.props.style) !== JSON.stringify(style);\n            var highlightChanged = this.props.highlight !== highlight;\n            var selectionChanged = this.props.selection !== selection;\n\n            var seriesChanged = false;\n            if (oldSeries.size() !== newSeries.size()) {\n                seriesChanged = true;\n            } else {\n                seriesChanged = !_pondjs.TimeSeries.is(oldSeries, newSeries);\n            }\n\n            return seriesChanged || timeScaleChanged || widthChanged || interpolationChanged || columnsChanged || styleChanged || yAxisScaleChanged || highlightChanged || selectionChanged;\n        }\n    }, {\n        key: \"handleHover\",\n        value: function handleHover(e, column) {\n            if (this.props.onHighlightChange) {\n                this.props.onHighlightChange(column);\n            }\n        }\n    }, {\n        key: \"handleHoverLeave\",\n        value: function handleHoverLeave() {\n            if (this.props.onHighlightChange) {\n                this.props.onHighlightChange(null);\n            }\n        }\n    }, {\n        key: \"handleClick\",\n        value: function handleClick(e, column) {\n            e.stopPropagation();\n            if (this.props.onSelectionChange) {\n                this.props.onSelectionChange(column);\n            }\n        }\n    }, {\n        key: \"providedAreaStyleMap\",\n        value: function providedAreaStyleMap(column) {\n            var style = {};\n            if (this.props.style) {\n                if (this.props.style instanceof _styler.Styler) {\n                    style = this.props.style.areaChartStyle()[column];\n                } else if (_underscore2.default.isFunction(this.props.style)) {\n                    style = this.props.style(column);\n                } else if (_underscore2.default.isObject(this.props.style)) {\n                    style = this.props.style ? this.props.style[column] : defaultStyle;\n                }\n            }\n            return style;\n        }\n\n        /**\n         * Returns the style used for drawing the path\n         */\n\n    }, {\n        key: \"style\",\n        value: function style(column, type) {\n            var style = void 0;\n\n            var styleMap = this.providedAreaStyleMap(column);\n            var isHighlighted = this.props.highlight && column === this.props.highlight;\n            var isSelected = this.props.selection && column === this.props.selection;\n\n            if (!_underscore2.default.has(styleMap, \"line\")) {\n                console.error(\"Provided style for AreaChart does not define a style for the outline:\", styleMap, column);\n            }\n\n            if (!_underscore2.default.has(styleMap, \"area\")) {\n                console.error(\"Provided style for AreaChart does not define a style for the area:\", styleMap);\n            }\n\n            if (this.props.selection) {\n                if (isSelected) {\n                    style = (0, _merge2.default)(true, defaultStyle[type].selected, styleMap[type].selected ? styleMap[type].selected : {});\n                } else if (isHighlighted) {\n                    style = (0, _merge2.default)(true, defaultStyle[type].highlighted, styleMap[type].highlighted ? styleMap[type].highlighted : {});\n                } else {\n                    style = (0, _merge2.default)(true, defaultStyle[type].muted, styleMap[type].muted ? styleMap[type].muted : {});\n                }\n            } else if (isHighlighted) {\n                style = (0, _merge2.default)(true, defaultStyle[type].highlighted, styleMap[type].highlighted ? styleMap[type].highlighted : {});\n            } else {\n                style = (0, _merge2.default)(true, defaultStyle[type].normal, styleMap[type].normal ? styleMap[type].normal : {});\n            }\n            return style;\n        }\n    }, {\n        key: \"pathStyle\",\n        value: function pathStyle(column) {\n            return this.style(column, \"line\");\n        }\n    }, {\n        key: \"areaStyle\",\n        value: function areaStyle(column) {\n            return this.style(column, \"area\");\n        }\n    }, {\n        key: \"renderArea\",\n        value: function renderArea(data, column, key) {\n            var _this2 = this;\n\n            // Use D3 to build an area generation function\n            var style = this.areaStyle(column);\n            var pathStyle = this.pathStyle(column);\n\n            var areaGenerator = (0, _d3Shape.area)().curve(_curve2.default[this.props.interpolation]).x(function (d) {\n                return d.x0;\n            }).y0(function (d) {\n                return d.y0;\n            }).y1(function (d) {\n                return d.y1;\n            });\n\n            // Use the area generation function with our stacked data\n            // to get an SVG path\n            var areaPath = areaGenerator(data);\n\n            // Outline the top of the curve\n            var lineGenerator = (0, _d3Shape.line)().curve(_curve2.default[this.props.interpolation]).x(function (d) {\n                return d.x0;\n            }).y(function (d) {\n                return d.y1;\n            });\n            var outlinePath = lineGenerator(data);\n\n            return _react2.default.createElement(\n                \"g\",\n                { key: \"area-\" + key },\n                _react2.default.createElement(\"path\", { d: areaPath, style: style }),\n                _react2.default.createElement(\"path\", {\n                    d: areaPath,\n                    style: style,\n                    onClick: function onClick(e) {\n                        return _this2.handleClick(e, column);\n                    },\n                    onMouseLeave: function onMouseLeave() {\n                        return _this2.handleHoverLeave();\n                    },\n                    onMouseMove: function onMouseMove(e) {\n                        return _this2.handleHover(e, column);\n                    }\n                }),\n                _react2.default.createElement(\"path\", {\n                    d: outlinePath,\n                    style: pathStyle,\n                    onClick: function onClick(e) {\n                        return _this2.handleClick(e, column);\n                    },\n                    onMouseLeave: function onMouseLeave() {\n                        return _this2.handleHoverLeave();\n                    },\n                    onMouseMove: function onMouseMove(e) {\n                        return _this2.handleHover(e, column);\n                    }\n                })\n            );\n        }\n    }, {\n        key: \"renderPaths\",\n        value: function renderPaths(columnList, direction) {\n            var _this3 = this;\n\n            var dir = direction === \"up\" ? 1 : -1;\n            var size = this.props.series.size();\n            var offsets = new Array(size).fill(0);\n            var len = columnList.length;\n\n            return columnList.map(function (column, i) {\n                // Stack the series columns to get our data in x0, y0, y1 format\n                var pathAreas = [];\n                var count = 1;\n                if (_this3.props.breakArea) {\n                    var currentPoints = null;\n                    for (var j = 0; j < _this3.props.series.size(); j += 1) {\n                        var seriesPoint = _this3.props.series.at(j);\n                        var value = seriesPoint.get(column);\n                        var badPoint = _underscore2.default.isNull(value) || _underscore2.default.isNaN(value) || !_underscore2.default.isFinite(value);\n                        if (badPoint) value = 0;\n\n                        // Case 1:\n                        // When stacking is present with multiple area charts, then mark bad points as 0\n                        if (len > 1) {\n                            if (!currentPoints) currentPoints = [];\n                            currentPoints.push({\n                                x0: _this3.props.timeScale(seriesPoint.timestamp()),\n                                y0: _this3.props.yScale(offsets[j]),\n                                y1: _this3.props.yScale(offsets[j] + dir * value)\n                            });\n                            if (_this3.props.stack) {\n                                offsets[j] += dir * value;\n                            }\n                        }\n                        // Case Two\n                        // When only one area chart is to be drawn, then create different areas for each area and ignore nulls and NaNs\n                        else {\n                                if (!badPoint) {\n                                    if (!currentPoints) currentPoints = [];\n                                    currentPoints.push({\n                                        x0: _this3.props.timeScale(seriesPoint.timestamp()),\n                                        y0: _this3.props.yScale(offsets[j]),\n                                        y1: _this3.props.yScale(offsets[j] + dir * value)\n                                    });\n                                    if (_this3.props.stack) {\n                                        offsets[j] += dir * value;\n                                    }\n                                } else if (currentPoints) {\n                                    if (currentPoints.length > 1) {\n                                        pathAreas.push(_this3.renderArea(currentPoints, column, count));\n                                        count += 1;\n                                    }\n                                    currentPoints = null;\n                                }\n                            }\n                    }\n                    if (currentPoints && currentPoints.length > 1) {\n                        pathAreas.push(_this3.renderArea(currentPoints, column, count));\n                        count += 1;\n                    }\n                } else {\n                    // Ignore nulls and NaNs in the area chart\n                    var cleanedPoints = [];\n                    for (var _j = 0; _j < _this3.props.series.size(); _j += 1) {\n                        var _seriesPoint = _this3.props.series.at(_j);\n                        var _value = _seriesPoint.get(column);\n                        var _badPoint = _underscore2.default.isNull(_value) || _underscore2.default.isNaN(_value) || !_underscore2.default.isFinite(_value);\n                        if (!_badPoint) {\n                            cleanedPoints.push({\n                                x0: _this3.props.timeScale(_seriesPoint.timestamp()),\n                                y0: _this3.props.yScale(offsets[_j]),\n                                y1: _this3.props.yScale(offsets[_j] + dir * _value)\n                            });\n                            if (_this3.props.stack) {\n                                offsets[_j] += dir * _value;\n                            }\n                        }\n                    }\n\n                    pathAreas.push(_this3.renderArea(cleanedPoints, column, count));\n                    count += 1;\n                }\n\n                return _react2.default.createElement(\n                    \"g\",\n                    { key: column },\n                    pathAreas\n                );\n            });\n        }\n    }, {\n        key: \"renderAreas\",\n        value: function renderAreas() {\n            var up = this.props.columns.up || [];\n            var down = this.props.columns.down || [];\n            return _react2.default.createElement(\n                \"g\",\n                null,\n                this.renderPaths(up, \"up\"),\n                this.renderPaths(down, \"down\")\n            );\n        }\n    }, {\n        key: \"render\",\n        value: function render() {\n            return _react2.default.createElement(\n                \"g\",\n                null,\n                this.renderAreas()\n            );\n        }\n    }]);\n\n    return AreaChart;\n}(_react2.default.Component);\n\nexports.default = AreaChart;\n\n\nAreaChart.propTypes = {\n    /**\n     * What [Pond TimeSeries](https://esnet-pondjs.appspot.com/#/timeseries) data to visualize\n     */\n    series: _propTypes2.default.instanceOf(_pondjs.TimeSeries).isRequired,\n\n    /**\n     * Reference to the axis which provides the vertical scale for ## drawing. e.g.\n     * specifying axis=\"trafficRate\" would refer the y-scale to the YAxis of id=\"trafficRate\".\n     */\n    axis: _propTypes2.default.string.isRequired, // eslint-disable-line\n\n    /**\n     * Show or hide this chart\n     */\n    visible: _propTypes2.default.bool,\n\n    /**\n     * The series series columns mapped to stacking up and down.\n     * Has the format:\n     * ```\n     *  \"columns\": {\n     *      up: [\"in\", ...],\n     *      down: [\"out\", ...]\n     *  }\n     *  ```\n     * \n     * NOTE : Columns can't have periods because periods \n     * represent a path to deep data in the underlying events \n     * (i.e. reference into nested data structures)\n     */\n    columns: _propTypes2.default.shape({\n        up: _propTypes2.default.arrayOf(_propTypes2.default.string),\n        down: _propTypes2.default.arrayOf(_propTypes2.default.string)\n    }),\n\n    /**\n     * Stack areas on top of each other\n     */\n    stack: _propTypes2.default.bool,\n\n    /**\n     * The styles to apply to the underlying SVG lines. This is a mapping\n     * of column names to objects with style attributes, in the following\n     * format:\n     *\n     * ```\n     * const style = {\n     *     in: {\n     *         line: {\n     *             normal: {stroke: \"steelblue\", fill: \"none\", strokeWidth: 1},\n     *             highlighted: {stroke: \"#5a98cb\", fill: \"none\", strokeWidth: 1},\n     *             selected: {stroke: \"steelblue\", fill: \"none\", strokeWidth: 1},\n     *             muted: {stroke: \"steelblue\", fill: \"none\", opacity: 0.4, strokeWidth: 1}\n     *         },\n     *         area: {\n     *             normal: {fill: \"steelblue\", stroke: \"none\", opacity: 0.75},\n     *             highlighted: {fill: \"#5a98cb\", stroke: \"none\", opacity: 0.75},\n     *             selected: {fill: \"steelblue\", stroke: \"none\", opacity: 0.75},\n     *             muted: {fill: \"steelblue\", stroke: \"none\", opacity: 0.25}\n     *         }\n     *     },\n     *     out: {\n     *         ...\n     *     }\n     * };\n     *\n     * <AreaChart style={style} ... />\n     * ```\n     *\n     * Alternatively, you can pass in a Styler. For example:\n     *\n     * ```\n     * const upDownStyler = styler([\n     *     {key: \"in\", color: \"#C8D5B8\"},\n     *     {key: \"out\", color: \"#9BB8D7\"}\n     * ]);\n     *\n     * <AreaChart columns={[\"in\", \"out\"]} style={upDownStyler} ... />\n     *\n     * ```\n     */\n    style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func, _propTypes2.default.instanceOf(_styler.Styler)]),\n\n    /**\n     * Any of D3's interpolation modes.\n     */\n    interpolation: _propTypes2.default.oneOf([\"curveBasis\", \"curveBasisOpen\", \"curveBundle\", \"curveCardinal\", \"curveCardinalOpen\", \"curveCatmullRom\", \"curveCatmullRomOpen\", \"curveLinear\", \"curveMonotoneX\", \"curveMonotoneY\", \"curveNatural\", \"curveRadial\", \"curveStep\", \"curveStepAfter\", \"curveStepBefore\"]),\n\n    /**\n     * The currenly highlighted column\n     */\n    highlight: _propTypes2.default.string,\n\n    /**\n     * Callback called when the highlight changes, i.e. hover event\n     */\n    onHighlightChange: _propTypes2.default.func,\n\n    /**\n     * The currenly selected column\n     */\n    selection: _propTypes2.default.string,\n\n    /**\n     * Callback called when the selection changes, i.e. area is clicked\n     */\n    onSelectionChange: _propTypes2.default.func,\n\n    /**\n     * [Internal] The timeScale supplied by the surrounding ChartContainer\n     */\n    timeScale: _propTypes2.default.func,\n\n    /**\n     * [Internal] The yScale supplied by the associated YAxis\n     */\n    yScale: _propTypes2.default.func,\n\n    /**\n     * [Internal] The width supplied by the surrounding ChartContainer\n     */\n    width: _propTypes2.default.number,\n\n    /**\n     * The determines how to handle bad/missing values in the supplied\n     * TimeSeries. A missing value can be null or NaN. If breakArea\n     * is set to true then the area chart will be broken on either side of\n     * the bad value(s). If breakArea is false (the default) bad values\n     * are simply removed and the adjoining points are connected.\n     */\n    breakArea: _propTypes2.default.bool\n};\n\nAreaChart.defaultProps = {\n    visible: true,\n    interpolation: \"curveLinear\",\n    columns: {\n        up: [\"value\"],\n        down: []\n    },\n    stack: true,\n    breakArea: true\n};"]},"metadata":{},"sourceType":"script"}