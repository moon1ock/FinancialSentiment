{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _processor = _interopRequireDefault(require(\"./processor\"));\n\nvar _pipeline = require(\"../pipeline\");\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/**\n * A processor which takes a fieldSpec and returns a new event\n * with a new column that is a collapsed result of the selected\n * columns. To collapse the columns it uses the supplied reducer\n * function. Optionally the new column can completely replace\n * the existing columns in the event.\n */\n\n\nclass Collapser extends _processor.default {\n  constructor(arg1, options) {\n    super(arg1, options);\n\n    if (arg1 instanceof Collapser) {\n      var other = arg1;\n      this._fieldSpecList = other._fieldSpecList;\n      this._name = other._name;\n      this._reducer = other._reducer;\n      this._append = other._append;\n    } else if ((0, _pipeline.isPipeline)(arg1)) {\n      this._fieldSpecList = options.fieldSpecList;\n      this._name = options.name;\n      this._reducer = options.reducer;\n      this._append = options.append;\n    } else {\n      throw new Error(\"Unknown arg to Collapser constructor\", arg1);\n    }\n  }\n\n  clone() {\n    return new Collapser(this);\n  }\n\n  addEvent(event) {\n    if (this.hasObservers()) {\n      this.emit(event.collapse(this._fieldSpecList, this._name, this._reducer, this._append));\n    }\n  }\n\n}\n\nexports.default = Collapser;","map":{"version":3,"sources":["/Users/nicholasraffone/Documents/swefall2021/finalproj/FinancialSentiment/fin_sentiment_front/node_modules/pondjs/lib/lib/processors/collapser.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_processor","_pipeline","Collapser","constructor","arg1","options","other","_fieldSpecList","_name","_reducer","_append","isPipeline","fieldSpecList","name","reducer","append","Error","clone","addEvent","event","hasObservers","emit","collapse"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,UAAU,GAAGP,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAvC;;AAEA,IAAIO,SAAS,GAAGP,OAAO,CAAC,aAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMQ,SAAN,SAAwBF,UAAU,CAACD,OAAnC,CAA2C;AACzCI,EAAAA,WAAW,CAACC,IAAD,EAAOC,OAAP,EAAgB;AACzB,UAAMD,IAAN,EAAYC,OAAZ;;AAEA,QAAID,IAAI,YAAYF,SAApB,EAA+B;AAC7B,UAAII,KAAK,GAAGF,IAAZ;AACA,WAAKG,cAAL,GAAsBD,KAAK,CAACC,cAA5B;AACA,WAAKC,KAAL,GAAaF,KAAK,CAACE,KAAnB;AACA,WAAKC,QAAL,GAAgBH,KAAK,CAACG,QAAtB;AACA,WAAKC,OAAL,GAAeJ,KAAK,CAACI,OAArB;AACD,KAND,MAMO,IAAI,CAAC,GAAGT,SAAS,CAACU,UAAd,EAA0BP,IAA1B,CAAJ,EAAqC;AAC1C,WAAKG,cAAL,GAAsBF,OAAO,CAACO,aAA9B;AACA,WAAKJ,KAAL,GAAaH,OAAO,CAACQ,IAArB;AACA,WAAKJ,QAAL,GAAgBJ,OAAO,CAACS,OAAxB;AACA,WAAKJ,OAAL,GAAeL,OAAO,CAACU,MAAvB;AACD,KALM,MAKA;AACL,YAAM,IAAIC,KAAJ,CAAU,sCAAV,EAAkDZ,IAAlD,CAAN;AACD;AACF;;AAEDa,EAAAA,KAAK,GAAG;AACN,WAAO,IAAIf,SAAJ,CAAc,IAAd,CAAP;AACD;;AAEDgB,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,QAAI,KAAKC,YAAL,EAAJ,EAAyB;AACvB,WAAKC,IAAL,CAAUF,KAAK,CAACG,QAAN,CAAe,KAAKf,cAApB,EAAoC,KAAKC,KAAzC,EAAgD,KAAKC,QAArD,EAA+D,KAAKC,OAApE,CAAV;AACD;AACF;;AA5BwC;;AAgC3Cb,OAAO,CAACE,OAAR,GAAkBG,SAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _processor = _interopRequireDefault(require(\"./processor\"));\n\nvar _pipeline = require(\"../pipeline\");\n\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/**\n * A processor which takes a fieldSpec and returns a new event\n * with a new column that is a collapsed result of the selected\n * columns. To collapse the columns it uses the supplied reducer\n * function. Optionally the new column can completely replace\n * the existing columns in the event.\n */\nclass Collapser extends _processor.default {\n  constructor(arg1, options) {\n    super(arg1, options);\n\n    if (arg1 instanceof Collapser) {\n      var other = arg1;\n      this._fieldSpecList = other._fieldSpecList;\n      this._name = other._name;\n      this._reducer = other._reducer;\n      this._append = other._append;\n    } else if ((0, _pipeline.isPipeline)(arg1)) {\n      this._fieldSpecList = options.fieldSpecList;\n      this._name = options.name;\n      this._reducer = options.reducer;\n      this._append = options.append;\n    } else {\n      throw new Error(\"Unknown arg to Collapser constructor\", arg1);\n    }\n  }\n\n  clone() {\n    return new Collapser(this);\n  }\n\n  addEvent(event) {\n    if (this.hasObservers()) {\n      this.emit(event.collapse(this._fieldSpecList, this._name, this._reducer, this._append));\n    }\n  }\n\n}\n\nexports.default = Collapser;"]},"metadata":{},"sourceType":"script"}