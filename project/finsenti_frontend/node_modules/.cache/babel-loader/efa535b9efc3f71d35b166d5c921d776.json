{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _underscore = _interopRequireDefault(require(\"underscore\"));\n\nvar _immutable = _interopRequireDefault(require(\"immutable\"));\n\nvar _event = _interopRequireDefault(require(\"./event\"));\n\nvar _util = _interopRequireDefault(require(\"./base/util\"));\n/*\n *  Copyright (c) 2015, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/**\n * The creation of an TimeEvent is done by combining two parts:\n *  * the timestamp\n *  * the data\n *\n * To specify the data you can supply:\n\n *  * a Javascript object of key/values. The object may contained nested data.\n *  * an Immutable.Map\n *  * a simple type such as an integer. This is a shorthand for supplying {\"value\": v}.\n *\n * Example:\n *\n * ```\n * const t = new Date(\"2015-04-22T03:30:00Z\");\n * const event1 = new TimeEvent(t, { a: 5, b: 6 });\n * ```\n */\n\n\nclass TimeEvent extends _event.default {\n  /**\n   * The creation of an TimeEvent is done by combining two parts:\n   * the timestamp and the data.\n   *\n   * To construct you specify the timestamp as either:\n   *     - Javascript Date object\n   *     - a Moment, or\n   *     - millisecond timestamp: the number of ms since the UNIX epoch\n   *\n   * To specify the data you can supply either:\n   *     - a Javascript object containing key values pairs\n   *     - an Immutable.Map, or\n   *     - a simple type such as an integer. In the case of the simple type\n   *       this is a shorthand for supplying {\"value\": v}.\n   */\n  constructor(arg1, arg2) {\n    super();\n\n    if (arg1 instanceof TimeEvent) {\n      var other = arg1;\n      this._d = other._d;\n      return;\n    } else if (arg1 instanceof _immutable.default.Map && arg1.has(\"time\") && arg1.has(\"data\")) {\n      this._d = arg1;\n      return;\n    }\n\n    var time = _util.default.timestampFromArg(arg1);\n\n    var data = _util.default.dataFromArg(arg2);\n\n    this._d = new _immutable.default.Map({\n      time,\n      data\n    });\n  }\n  /**\n   * Returns the timestamp (as ms since the epoch)\n   */\n\n\n  key() {\n    return this.timestamp().getTime();\n  }\n  /**\n   * Returns the Event as a JSON object, essentially:\n   *  {time: t, data: {key: value, ...}}\n   * @return {Object} The event as JSON.\n   */\n\n\n  toJSON() {\n    return {\n      time: this.timestamp().getTime(),\n      data: this.data().toJSON()\n    };\n  }\n  /**\n   * Returns a flat array starting with the timestamp, followed by the values.\n   */\n\n\n  toPoint(columns) {\n    var values = [];\n    columns.forEach(c => {\n      var v = this.data().get(c);\n      values.push(v === \"undefined\" ? null : v);\n    });\n    return [this.timestamp().getTime(), ...values];\n  }\n  /**\n   * The timestamp of this data, in UTC time, as a string.\n   */\n\n\n  timestampAsUTCString() {\n    return this.timestamp().toUTCString();\n  }\n  /**\n   * The timestamp of this data, in Local time, as a string.\n   */\n\n\n  timestampAsLocalString() {\n    return this.timestamp().toString();\n  }\n  /**\n   * The timestamp of this data\n   */\n\n\n  timestamp() {\n    return this._d.get(\"time\");\n  }\n  /**\n   * The begin time of this Event, which will be just the timestamp\n   */\n\n\n  begin() {\n    return this.timestamp();\n  }\n  /**\n   * The end time of this Event, which will be just the timestamp\n   */\n\n\n  end() {\n    return this.timestamp();\n  }\n  /**\n   * Turn the Collection data into a string\n   * @return {string} The collection as a string\n   */\n\n\n  stringify() {\n    return JSON.stringify(this.data());\n  }\n\n}\n\nvar _default = TimeEvent;\nexports.default = _default;","map":{"version":3,"sources":["/Users/nicholasraffone/Documents/swefall2021/finalproj/FinancialSentiment/fin_sentiment_front/node_modules/pondjs/lib/lib/timeevent.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_underscore","_immutable","_event","_util","TimeEvent","constructor","arg1","arg2","other","_d","Map","has","time","timestampFromArg","data","dataFromArg","key","timestamp","getTime","toJSON","toPoint","columns","values","forEach","c","v","get","push","timestampAsUTCString","toUTCString","timestampAsLocalString","toString","begin","end","stringify","JSON","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _underscore = _interopRequireDefault(require(\"underscore\"));\n\nvar _immutable = _interopRequireDefault(require(\"immutable\"));\n\nvar _event = _interopRequireDefault(require(\"./event\"));\n\nvar _util = _interopRequireDefault(require(\"./base/util\"));\n\n/*\n *  Copyright (c) 2015, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/**\n * The creation of an TimeEvent is done by combining two parts:\n *  * the timestamp\n *  * the data\n *\n * To specify the data you can supply:\n\n *  * a Javascript object of key/values. The object may contained nested data.\n *  * an Immutable.Map\n *  * a simple type such as an integer. This is a shorthand for supplying {\"value\": v}.\n *\n * Example:\n *\n * ```\n * const t = new Date(\"2015-04-22T03:30:00Z\");\n * const event1 = new TimeEvent(t, { a: 5, b: 6 });\n * ```\n */\nclass TimeEvent extends _event.default {\n  /**\n   * The creation of an TimeEvent is done by combining two parts:\n   * the timestamp and the data.\n   *\n   * To construct you specify the timestamp as either:\n   *     - Javascript Date object\n   *     - a Moment, or\n   *     - millisecond timestamp: the number of ms since the UNIX epoch\n   *\n   * To specify the data you can supply either:\n   *     - a Javascript object containing key values pairs\n   *     - an Immutable.Map, or\n   *     - a simple type such as an integer. In the case of the simple type\n   *       this is a shorthand for supplying {\"value\": v}.\n   */\n  constructor(arg1, arg2) {\n    super();\n\n    if (arg1 instanceof TimeEvent) {\n      var other = arg1;\n      this._d = other._d;\n      return;\n    } else if (arg1 instanceof _immutable.default.Map && arg1.has(\"time\") && arg1.has(\"data\")) {\n      this._d = arg1;\n      return;\n    }\n\n    var time = _util.default.timestampFromArg(arg1);\n\n    var data = _util.default.dataFromArg(arg2);\n\n    this._d = new _immutable.default.Map({\n      time,\n      data\n    });\n  }\n  /**\n   * Returns the timestamp (as ms since the epoch)\n   */\n\n\n  key() {\n    return this.timestamp().getTime();\n  }\n  /**\n   * Returns the Event as a JSON object, essentially:\n   *  {time: t, data: {key: value, ...}}\n   * @return {Object} The event as JSON.\n   */\n\n\n  toJSON() {\n    return {\n      time: this.timestamp().getTime(),\n      data: this.data().toJSON()\n    };\n  }\n  /**\n   * Returns a flat array starting with the timestamp, followed by the values.\n   */\n\n\n  toPoint(columns) {\n    var values = [];\n    columns.forEach(c => {\n      var v = this.data().get(c);\n      values.push(v === \"undefined\" ? null : v);\n    });\n    return [this.timestamp().getTime(), ...values];\n  }\n  /**\n   * The timestamp of this data, in UTC time, as a string.\n   */\n\n\n  timestampAsUTCString() {\n    return this.timestamp().toUTCString();\n  }\n  /**\n   * The timestamp of this data, in Local time, as a string.\n   */\n\n\n  timestampAsLocalString() {\n    return this.timestamp().toString();\n  }\n  /**\n   * The timestamp of this data\n   */\n\n\n  timestamp() {\n    return this._d.get(\"time\");\n  }\n  /**\n   * The begin time of this Event, which will be just the timestamp\n   */\n\n\n  begin() {\n    return this.timestamp();\n  }\n  /**\n   * The end time of this Event, which will be just the timestamp\n   */\n\n\n  end() {\n    return this.timestamp();\n  }\n  /**\n   * Turn the Collection data into a string\n   * @return {string} The collection as a string\n   */\n\n\n  stringify() {\n    return JSON.stringify(this.data());\n  }\n\n}\n\nvar _default = TimeEvent;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}