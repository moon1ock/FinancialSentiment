{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasraffone/Documents/swefall2021/finalproj/FinancialSentiment/fin_sentiment_front/src/components/searchpage/searchpage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport getScrapedData from '../../adapters/getScrapedData';\nimport SearchCards from './searchcards';\nimport SearchBar from '../searchbar/searchbar';\nimport CardLoader from './cardloader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchPage = () => {\n  _s();\n\n  const location = useLocation();\n  let navigate = useNavigate();\n  const [search, setSearch] = useState('');\n  const [data, setData] = useState({});\n  const [mean, setMean] = useState(0); //get search state from current url\n\n  useEffect(() => {\n    const query = location.search.split('=')[1];\n    if (!query) navigate(\"../\", {\n      replace: true\n    });\n    setSearch(query);\n  }, [location.search]); //once url is set, call api\n\n  useEffect(() => {\n    setData({});\n    if (!search) return;\n    getScrapedData(search).then(resp => setData(resp));\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-3\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      initial: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), data.data ? /*#__PURE__*/_jsxDEV(SearchCards, { ...data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : Array.apply(null, Array(5)).map((val, index) => {\n      return /*#__PURE__*/_jsxDEV(CardLoader, {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 72\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchPage, \"w+PI37TjoZ5pmMlgGc8xKDHMms0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/nicholasraffone/Documents/swefall2021/finalproj/FinancialSentiment/fin_sentiment_front/src/components/searchpage/searchpage.tsx"],"names":["React","useEffect","useState","useLocation","useNavigate","getScrapedData","SearchCards","SearchBar","CardLoader","SearchPage","location","navigate","search","setSearch","data","setData","mean","setMean","query","split","replace","then","resp","Array","apply","map","val","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAgBA,MAAMC,UAAU,GAAG,MAAK;AAAA;;AACpB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,MAAIQ,QAAQ,GAAGP,WAAW,EAA1B;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,CAAD,CAAhC,CALoB,CAOpB;;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMiB,KAAK,GAAGR,QAAQ,CAACE,MAAT,CAAgBO,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAd;AACA,QAAG,CAACD,KAAJ,EACIP,QAAQ,CAAC,KAAD,EAAQ;AAAES,MAAAA,OAAO,EAAE;AAAX,KAAR,CAAR;AACJP,IAAAA,SAAS,CAACK,KAAD,CAAT;AACH,GALQ,EAKP,CAACR,QAAQ,CAACE,MAAV,CALO,CAAT,CARoB,CAepB;;AACAX,EAAAA,SAAS,CAAC,MAAI;AACVc,IAAAA,OAAO,CAAC,EAAD,CAAP;AACA,QAAG,CAACH,MAAJ,EAAY;AACZP,IAAAA,cAAc,CAACO,MAAD,CAAd,CAAuBS,IAAvB,CAA4BC,IAAI,IAAEP,OAAO,CAACO,IAAD,CAAzC;AACH,GAJQ,EAIP,CAACV,MAAD,CAJO,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKE,IAAI,CAACA,IAAL,gBACG,QAAC,WAAD,OAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,YADH,GAEKS,KAAK,CAACC,KAAN,CAAY,IAAZ,EAAkBD,KAAK,CAAC,CAAD,CAAvB,EAA4BE,GAA5B,CAAgC,CAACC,GAAD,EAAKC,KAAL,KAAa;AAAC,0BAAO,QAAC,UAAD,MAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AAAiC,KAA/E,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA9BD;;GAAMlB,U;UACeN,W,EACFC,W;;;KAFbK,U;AA+BN,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport getScrapedData from '../../adapters/getScrapedData'\nimport SearchCards from './searchcards'\nimport SearchBar from '../searchbar/searchbar'\nimport CardLoader from './cardloader';\n\nexport interface Article{\n    description: string\n    image: string\n    pubDate: string\n    sentiment: number\n    site_name: string\n    title: string\n    url: string\n}\n\nexport interface ArticleList{\n    data: Article[]\n}\n\nconst SearchPage = () =>{\n    const location = useLocation()\n    let navigate = useNavigate()\n    const [search, setSearch] = useState('')\n    const [data, setData] = useState({} as ArticleList)\n    const [mean, setMean] = useState(0 as number)\n\n    //get search state from current url\n    useEffect(()=>{\n        const query = location.search.split('=')[1]\n        if(!query)\n            navigate(\"../\", { replace: true });\n        setSearch(query)\n    },[location.search])\n\n    //once url is set, call api\n    useEffect(()=>{\n        setData({} as ArticleList)\n        if(!search) return\n        getScrapedData(search).then(resp=>setData(resp))\n    },[search])\n    return(\n        <div className=\"p-3\">\n            <SearchBar initial={search}/>\n            {data.data?\n                <SearchCards {...data}/>\n                : Array.apply(null, Array(5)).map((val,index)=>{return <CardLoader key={index}/>})\n            }\n        </div>\n    )\n}\nexport default SearchPage\n"]},"metadata":{},"sourceType":"module"}