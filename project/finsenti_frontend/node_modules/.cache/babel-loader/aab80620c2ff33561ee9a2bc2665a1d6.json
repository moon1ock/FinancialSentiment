{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _processor = _interopRequireDefault(require(\"./processor\"));\n\nvar _pipeline = require(\"../pipeline\");\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/**\n * A processor which takes an operator as its only option\n * and uses that to either output the event or skip the\n * event\n */\n\n\nclass Filter extends _processor.default {\n  constructor(arg1, options) {\n    super(arg1, options);\n\n    if (arg1 instanceof Filter) {\n      var other = arg1;\n      this._op = other._op;\n    } else if ((0, _pipeline.isPipeline)(arg1)) {\n      this._op = options.op;\n    } else {\n      throw new Error(\"Unknown arg to Filter constructor\", arg1);\n    }\n  }\n\n  clone() {\n    return new Filter(this);\n  }\n  /**\n   * Output an event that is offset\n   */\n\n\n  addEvent(event) {\n    if (this.hasObservers()) {\n      if (this._op(event)) {\n        this.emit(event);\n      }\n    }\n  }\n\n}\n\nexports.default = Filter;","map":{"version":3,"sources":["/Users/nicholasraffone/Documents/swefall2021/finalproj/FinancialSentiment/fin_sentiment_front/node_modules/pondjs/lib/lib/processors/filter.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_processor","_pipeline","Filter","constructor","arg1","options","other","_op","isPipeline","op","Error","clone","addEvent","event","hasObservers","emit"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,UAAU,GAAGP,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAvC;;AAEA,IAAIO,SAAS,GAAGP,OAAO,CAAC,aAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMQ,MAAN,SAAqBF,UAAU,CAACD,OAAhC,CAAwC;AACtCI,EAAAA,WAAW,CAACC,IAAD,EAAOC,OAAP,EAAgB;AACzB,UAAMD,IAAN,EAAYC,OAAZ;;AAEA,QAAID,IAAI,YAAYF,MAApB,EAA4B;AAC1B,UAAII,KAAK,GAAGF,IAAZ;AACA,WAAKG,GAAL,GAAWD,KAAK,CAACC,GAAjB;AACD,KAHD,MAGO,IAAI,CAAC,GAAGN,SAAS,CAACO,UAAd,EAA0BJ,IAA1B,CAAJ,EAAqC;AAC1C,WAAKG,GAAL,GAAWF,OAAO,CAACI,EAAnB;AACD,KAFM,MAEA;AACL,YAAM,IAAIC,KAAJ,CAAU,mCAAV,EAA+CN,IAA/C,CAAN;AACD;AACF;;AAEDO,EAAAA,KAAK,GAAG;AACN,WAAO,IAAIT,MAAJ,CAAW,IAAX,CAAP;AACD;AACD;AACF;AACA;;;AAGEU,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,QAAI,KAAKC,YAAL,EAAJ,EAAyB;AACvB,UAAI,KAAKP,GAAL,CAASM,KAAT,CAAJ,EAAqB;AACnB,aAAKE,IAAL,CAAUF,KAAV;AACD;AACF;AACF;;AA5BqC;;AAgCxChB,OAAO,CAACE,OAAR,GAAkBG,MAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _processor = _interopRequireDefault(require(\"./processor\"));\n\nvar _pipeline = require(\"../pipeline\");\n\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/**\n * A processor which takes an operator as its only option\n * and uses that to either output the event or skip the\n * event\n */\nclass Filter extends _processor.default {\n  constructor(arg1, options) {\n    super(arg1, options);\n\n    if (arg1 instanceof Filter) {\n      var other = arg1;\n      this._op = other._op;\n    } else if ((0, _pipeline.isPipeline)(arg1)) {\n      this._op = options.op;\n    } else {\n      throw new Error(\"Unknown arg to Filter constructor\", arg1);\n    }\n  }\n\n  clone() {\n    return new Filter(this);\n  }\n  /**\n   * Output an event that is offset\n   */\n\n\n  addEvent(event) {\n    if (this.hasObservers()) {\n      if (this._op(event)) {\n        this.emit(event);\n      }\n    }\n  }\n\n}\n\nexports.default = Filter;"]},"metadata":{},"sourceType":"script"}