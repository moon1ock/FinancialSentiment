{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _pipelinein = _interopRequireDefault(require(\"./pipelinein\"));\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n\nclass Stream extends _pipelinein.default {\n  constructor() {\n    super();\n    this._running = true;\n  }\n  /**\n   * Start listening to events\n   */\n\n\n  start() {\n    this._running = true;\n  }\n  /**\n   * Stop listening to events\n   */\n\n\n  stop() {\n    this._running = false;\n    this.flush(); // emit a flush to let processors cleanly exit.\n  }\n  /**\n   * Add an incoming event to the source\n   */\n\n\n  addEvent(event) {\n    this._check(event);\n\n    if (this.hasObservers() && this._running) {\n      this.emit(event);\n    }\n  }\n\n  *events() {\n    throw new Error(\"Iteration across unbounded sources is not supported.\");\n  }\n\n}\n\nexports.default = Stream;","map":{"version":3,"sources":["/Users/nicholasraffone/Documents/swefall2021/finalproj/FinancialSentiment/fin_sentiment_front/node_modules/pondjs/lib/lib/io/stream.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_pipelinein","Stream","constructor","_running","start","stop","flush","addEvent","event","_check","hasObservers","emit","events","Error"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,WAAW,GAAGP,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAAxC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMO,MAAN,SAAqBD,WAAW,CAACD,OAAjC,CAAyC;AACvCG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,QAAL,GAAgB,IAAhB;AACD;AACD;AACF;AACA;;;AAGEC,EAAAA,KAAK,GAAG;AACN,SAAKD,QAAL,GAAgB,IAAhB;AACD;AACD;AACF;AACA;;;AAGEE,EAAAA,IAAI,GAAG;AACL,SAAKF,QAAL,GAAgB,KAAhB;AACA,SAAKG,KAAL,GAFK,CAES;AACf;AACD;AACF;AACA;;;AAGEC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,SAAKC,MAAL,CAAYD,KAAZ;;AAEA,QAAI,KAAKE,YAAL,MAAuB,KAAKP,QAAhC,EAA0C;AACxC,WAAKQ,IAAL,CAAUH,KAAV;AACD;AACF;;AAEM,GAANI,MAAM,GAAG;AACR,UAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACD;;AArCsC;;AAyCzChB,OAAO,CAACE,OAAR,GAAkBE,MAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _pipelinein = _interopRequireDefault(require(\"./pipelinein\"));\n\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\nclass Stream extends _pipelinein.default {\n  constructor() {\n    super();\n    this._running = true;\n  }\n  /**\n   * Start listening to events\n   */\n\n\n  start() {\n    this._running = true;\n  }\n  /**\n   * Stop listening to events\n   */\n\n\n  stop() {\n    this._running = false;\n    this.flush(); // emit a flush to let processors cleanly exit.\n  }\n  /**\n   * Add an incoming event to the source\n   */\n\n\n  addEvent(event) {\n    this._check(event);\n\n    if (this.hasObservers() && this._running) {\n      this.emit(event);\n    }\n  }\n\n  *events() {\n    throw new Error(\"Iteration across unbounded sources is not supported.\");\n  }\n\n}\n\nexports.default = Stream;"]},"metadata":{},"sourceType":"script"}