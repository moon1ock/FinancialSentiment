{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _underscore = _interopRequireDefault(require(\"underscore\"));\n\nvar _processor = _interopRequireDefault(require(\"./processor\"));\n\nvar _event = _interopRequireDefault(require(\"../event\"));\n\nvar _pipeline = require(\"../pipeline\");\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/**\n * A simple processor used by the testing code to verify Pipeline behavior\n */\n\n\nclass Offset extends _processor.default {\n  constructor(arg1, options) {\n    super(arg1, options);\n\n    if (arg1 instanceof Offset) {\n      var other = arg1;\n      this._by = other._by;\n      this._fieldSpec = other._fieldSpec;\n    } else if ((0, _pipeline.isPipeline)(arg1)) {\n      this._by = options.by || 1;\n      this._fieldSpec = options.fieldSpec;\n    } else {\n      throw new Error(\"Unknown arg to Offset constructor\", arg1);\n    }\n  }\n\n  clone() {\n    return new Offset(this);\n  }\n  /**\n   * Output an event that is offset\n   */\n\n\n  addEvent(event) {\n    if (this.hasObservers()) {\n      var selected = _event.default.selector(event, this._fieldSpec);\n\n      var data = {};\n\n      _underscore.default.each(selected.data().toJSON(), (value, key) => {\n        var offsetValue = value + this._by;\n        data[key] = offsetValue;\n      });\n\n      var outputEvent = event.setData(data);\n      this.emit(outputEvent);\n    }\n  }\n\n}\n\nexports.default = Offset;","map":{"version":3,"sources":["/Users/nicholasraffone/Documents/swefall2021/finalproj/FinancialSentiment/fin_sentiment_front/node_modules/pondjs/lib/lib/processors/offset.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_underscore","_processor","_event","_pipeline","Offset","constructor","arg1","options","other","_by","_fieldSpec","isPipeline","by","fieldSpec","Error","clone","addEvent","event","hasObservers","selected","selector","data","each","toJSON","key","offsetValue","outputEvent","setData","emit"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,WAAW,GAAGP,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAxC;;AAEA,IAAIO,UAAU,GAAGR,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAvC;;AAEA,IAAIQ,MAAM,GAAGT,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAAnC;;AAEA,IAAIS,SAAS,GAAGT,OAAO,CAAC,aAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACA,MAAMU,MAAN,SAAqBH,UAAU,CAACF,OAAhC,CAAwC;AACtCM,EAAAA,WAAW,CAACC,IAAD,EAAOC,OAAP,EAAgB;AACzB,UAAMD,IAAN,EAAYC,OAAZ;;AAEA,QAAID,IAAI,YAAYF,MAApB,EAA4B;AAC1B,UAAII,KAAK,GAAGF,IAAZ;AACA,WAAKG,GAAL,GAAWD,KAAK,CAACC,GAAjB;AACA,WAAKC,UAAL,GAAkBF,KAAK,CAACE,UAAxB;AACD,KAJD,MAIO,IAAI,CAAC,GAAGP,SAAS,CAACQ,UAAd,EAA0BL,IAA1B,CAAJ,EAAqC;AAC1C,WAAKG,GAAL,GAAWF,OAAO,CAACK,EAAR,IAAc,CAAzB;AACA,WAAKF,UAAL,GAAkBH,OAAO,CAACM,SAA1B;AACD,KAHM,MAGA;AACL,YAAM,IAAIC,KAAJ,CAAU,mCAAV,EAA+CR,IAA/C,CAAN;AACD;AACF;;AAEDS,EAAAA,KAAK,GAAG;AACN,WAAO,IAAIX,MAAJ,CAAW,IAAX,CAAP;AACD;AACD;AACF;AACA;;;AAGEY,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,QAAI,KAAKC,YAAL,EAAJ,EAAyB;AACvB,UAAIC,QAAQ,GAAGjB,MAAM,CAACH,OAAP,CAAeqB,QAAf,CAAwBH,KAAxB,EAA+B,KAAKP,UAApC,CAAf;;AAEA,UAAIW,IAAI,GAAG,EAAX;;AAEArB,MAAAA,WAAW,CAACD,OAAZ,CAAoBuB,IAApB,CAAyBH,QAAQ,CAACE,IAAT,GAAgBE,MAAhB,EAAzB,EAAmD,CAACzB,KAAD,EAAQ0B,GAAR,KAAgB;AACjE,YAAIC,WAAW,GAAG3B,KAAK,GAAG,KAAKW,GAA/B;AACAY,QAAAA,IAAI,CAACG,GAAD,CAAJ,GAAYC,WAAZ;AACD,OAHD;;AAKA,UAAIC,WAAW,GAAGT,KAAK,CAACU,OAAN,CAAcN,IAAd,CAAlB;AACA,WAAKO,IAAL,CAAUF,WAAV;AACD;AACF;;AAtCqC;;AA0CxC7B,OAAO,CAACE,OAAR,GAAkBK,MAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _underscore = _interopRequireDefault(require(\"underscore\"));\n\nvar _processor = _interopRequireDefault(require(\"./processor\"));\n\nvar _event = _interopRequireDefault(require(\"../event\"));\n\nvar _pipeline = require(\"../pipeline\");\n\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/**\n * A simple processor used by the testing code to verify Pipeline behavior\n */\nclass Offset extends _processor.default {\n  constructor(arg1, options) {\n    super(arg1, options);\n\n    if (arg1 instanceof Offset) {\n      var other = arg1;\n      this._by = other._by;\n      this._fieldSpec = other._fieldSpec;\n    } else if ((0, _pipeline.isPipeline)(arg1)) {\n      this._by = options.by || 1;\n      this._fieldSpec = options.fieldSpec;\n    } else {\n      throw new Error(\"Unknown arg to Offset constructor\", arg1);\n    }\n  }\n\n  clone() {\n    return new Offset(this);\n  }\n  /**\n   * Output an event that is offset\n   */\n\n\n  addEvent(event) {\n    if (this.hasObservers()) {\n      var selected = _event.default.selector(event, this._fieldSpec);\n\n      var data = {};\n\n      _underscore.default.each(selected.data().toJSON(), (value, key) => {\n        var offsetValue = value + this._by;\n        data[key] = offsetValue;\n      });\n\n      var outputEvent = event.setData(data);\n      this.emit(outputEvent);\n    }\n  }\n\n}\n\nexports.default = Offset;"]},"metadata":{},"sourceType":"script"}