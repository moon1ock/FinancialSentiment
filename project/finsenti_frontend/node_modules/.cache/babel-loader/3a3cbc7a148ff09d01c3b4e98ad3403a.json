{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _underscore = _interopRequireDefault(require(\"underscore\"));\n\nvar _processor = _interopRequireDefault(require(\"./processor\"));\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nvar _timeevent = _interopRequireDefault(require(\"../timeevent\"));\n\nvar _indexedevent = _interopRequireDefault(require(\"../indexedevent\"));\n\nvar _timerange = _interopRequireDefault(require(\"../timerange\"));\n\nvar _timerangeevent = _interopRequireDefault(require(\"../timerangeevent\"));\n\nvar _pipeline = require(\"../pipeline\");\n\nvar _util = _interopRequireDefault(require(\"../base/util\"));\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n\nfunction isSubclass(Base, X) {\n  return Base === X || X.prototype === Base;\n}\n\nclass Converter extends _processor.default {\n  constructor(arg1, options) {\n    super(arg1, options);\n\n    if (arg1 instanceof Converter) {\n      var other = arg1;\n      this._convertTo = other._convertTo;\n      this._duration = other._duration;\n      this._durationString = other._durationString;\n      this._alignment = other._alignment;\n    } else if ((0, _pipeline.isPipeline)(arg1)) {\n      if (!_underscore.default.has(options, \"type\")) {\n        throw new Error(\"Converter: constructor needs 'type' in options\");\n      }\n\n      if (isSubclass(_timeevent.default, options.type)) {\n        this._convertTo = options.type;\n      } else if (isSubclass(_timerangeevent.default, options.type) || isSubclass(_indexedevent.default, options.type)) {\n        this._convertTo = options.type;\n\n        if (options.duration && _underscore.default.isString(options.duration)) {\n          this._duration = _util.default.windowDuration(options.duration);\n          this._durationString = options.duration;\n        }\n      } else {\n        throw Error(\"Unable to interpret type argument passed to Converter constructor\");\n      }\n\n      this._alignment = options.alignment || \"center\";\n    } else {\n      throw new Error(\"Unknown arg to Converter constructor\", arg1);\n    }\n  }\n\n  clone() {\n    return new Converter(this);\n  }\n\n  convertEvent(event) {\n    var T = this._convertTo;\n\n    if (isSubclass(_timeevent.default, T)) {\n      return event;\n    } else if (isSubclass(_timerangeevent.default, T)) {\n      var alignment = this._alignment;\n      var begin, end;\n\n      if (!this._duration) {\n        throw new Error(\"Duration expected in converter\");\n      }\n\n      switch (alignment) {\n        case \"front\":\n          begin = event.timestamp();\n          end = new Date(+event.timestamp() + this._duration);\n          break;\n\n        case \"center\":\n          begin = new Date(+event.timestamp() - parseInt(this._duration / 2, 10));\n          end = new Date(+event.timestamp() + parseInt(this._duration / 2, 10));\n          break;\n\n        case \"behind\":\n          end = event.timestamp();\n          begin = new Date(+event.timestamp() - this._duration);\n          break;\n\n        default:\n          throw new Error(\"Unknown alignment of converter\");\n      }\n\n      var timeRange = new _timerange.default([begin, end]);\n      return new T(timeRange, event.data());\n    } else if (isSubclass(_indexedevent.default, T)) {\n      var timestamp = event.timestamp();\n\n      var indexString = _index.default.getIndexString(this._durationString, timestamp);\n\n      return new this._convertTo(indexString, event.data(), null);\n    }\n  }\n\n  convertTimeRangeEvent(event) {\n    var T = this._convertTo;\n\n    if (isSubclass(_timerangeevent.default, T)) {\n      return event;\n    }\n\n    if (isSubclass(_timeevent.default, T)) {\n      var alignment = this._alignment;\n      var beginTime = event.begin();\n      var endTime = event.end();\n      var timestamp;\n\n      switch (alignment) {\n        case \"lag\":\n          timestamp = beginTime;\n          break;\n\n        case \"center\":\n          timestamp = new Date(parseInt((beginTime.getTime() + endTime.getTime()) / 2, 10));\n          break;\n\n        case \"lead\":\n          timestamp = endTime;\n          break;\n      }\n\n      return new T(timestamp, event.data());\n    }\n\n    if (isSubclass(_indexedevent.default, T)) {\n      throw new Error(\"Cannot convert TimeRangeEvent to an IndexedEvent\");\n    }\n  }\n\n  convertIndexedEvent(event) {\n    var T = this._convertTo;\n\n    if (isSubclass(_indexedevent.default, T)) {\n      return event;\n    }\n\n    if (isSubclass(_timeevent.default, T)) {\n      var alignment = this._alignment;\n      var beginTime = event.begin();\n      var endTime = event.end();\n      var timestamp;\n\n      switch (alignment) {\n        case \"lag\":\n          timestamp = beginTime;\n          break;\n\n        case \"center\":\n          timestamp = new Date(parseInt((beginTime.getTime() + endTime.getTime()) / 2, 10));\n          break;\n\n        case \"lead\":\n          timestamp = endTime;\n          break;\n      }\n\n      return new T(timestamp, event.data());\n    }\n\n    if (isSubclass(_timerangeevent.default, T)) {\n      return new T(event.timerange(), event.data());\n    }\n  }\n  /**\n   * Output a converted event\n   */\n\n\n  addEvent(event) {\n    if (this.hasObservers()) {\n      var outputEvent;\n\n      if (event instanceof _timerangeevent.default) {\n        outputEvent = this.convertTimeRangeEvent(event);\n      } else if (event instanceof _indexedevent.default) {\n        outputEvent = this.convertIndexedEvent(event);\n      } else if (event instanceof _timeevent.default) {\n        outputEvent = this.convertEvent(event);\n      } else {\n        throw new Error(\"Unknown event type received\");\n      }\n\n      this.emit(outputEvent);\n    }\n  }\n\n}\n\nexports.default = Converter;","map":{"version":3,"sources":["/Users/nicholasraffone/Documents/swefall2021/finalproj/FinancialSentiment/fin_sentiment_front/node_modules/pondjs/lib/lib/processors/converter.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_underscore","_processor","_index","_timeevent","_indexedevent","_timerange","_timerangeevent","_pipeline","_util","isSubclass","Base","X","prototype","Converter","constructor","arg1","options","other","_convertTo","_duration","_durationString","_alignment","isPipeline","has","Error","type","duration","isString","windowDuration","alignment","clone","convertEvent","event","T","begin","end","timestamp","Date","parseInt","timeRange","data","indexString","getIndexString","convertTimeRangeEvent","beginTime","endTime","getTime","convertIndexedEvent","timerange","addEvent","hasObservers","outputEvent","emit"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _underscore = _interopRequireDefault(require(\"underscore\"));\n\nvar _processor = _interopRequireDefault(require(\"./processor\"));\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nvar _timeevent = _interopRequireDefault(require(\"../timeevent\"));\n\nvar _indexedevent = _interopRequireDefault(require(\"../indexedevent\"));\n\nvar _timerange = _interopRequireDefault(require(\"../timerange\"));\n\nvar _timerangeevent = _interopRequireDefault(require(\"../timerangeevent\"));\n\nvar _pipeline = require(\"../pipeline\");\n\nvar _util = _interopRequireDefault(require(\"../base/util\"));\n\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\nfunction isSubclass(Base, X) {\n  return Base === X || X.prototype === Base;\n}\n\nclass Converter extends _processor.default {\n  constructor(arg1, options) {\n    super(arg1, options);\n\n    if (arg1 instanceof Converter) {\n      var other = arg1;\n      this._convertTo = other._convertTo;\n      this._duration = other._duration;\n      this._durationString = other._durationString;\n      this._alignment = other._alignment;\n    } else if ((0, _pipeline.isPipeline)(arg1)) {\n      if (!_underscore.default.has(options, \"type\")) {\n        throw new Error(\"Converter: constructor needs 'type' in options\");\n      }\n\n      if (isSubclass(_timeevent.default, options.type)) {\n        this._convertTo = options.type;\n      } else if (isSubclass(_timerangeevent.default, options.type) || isSubclass(_indexedevent.default, options.type)) {\n        this._convertTo = options.type;\n\n        if (options.duration && _underscore.default.isString(options.duration)) {\n          this._duration = _util.default.windowDuration(options.duration);\n          this._durationString = options.duration;\n        }\n      } else {\n        throw Error(\"Unable to interpret type argument passed to Converter constructor\");\n      }\n\n      this._alignment = options.alignment || \"center\";\n    } else {\n      throw new Error(\"Unknown arg to Converter constructor\", arg1);\n    }\n  }\n\n  clone() {\n    return new Converter(this);\n  }\n\n  convertEvent(event) {\n    var T = this._convertTo;\n\n    if (isSubclass(_timeevent.default, T)) {\n      return event;\n    } else if (isSubclass(_timerangeevent.default, T)) {\n      var alignment = this._alignment;\n      var begin, end;\n\n      if (!this._duration) {\n        throw new Error(\"Duration expected in converter\");\n      }\n\n      switch (alignment) {\n        case \"front\":\n          begin = event.timestamp();\n          end = new Date(+event.timestamp() + this._duration);\n          break;\n\n        case \"center\":\n          begin = new Date(+event.timestamp() - parseInt(this._duration / 2, 10));\n          end = new Date(+event.timestamp() + parseInt(this._duration / 2, 10));\n          break;\n\n        case \"behind\":\n          end = event.timestamp();\n          begin = new Date(+event.timestamp() - this._duration);\n          break;\n\n        default:\n          throw new Error(\"Unknown alignment of converter\");\n      }\n\n      var timeRange = new _timerange.default([begin, end]);\n      return new T(timeRange, event.data());\n    } else if (isSubclass(_indexedevent.default, T)) {\n      var timestamp = event.timestamp();\n\n      var indexString = _index.default.getIndexString(this._durationString, timestamp);\n\n      return new this._convertTo(indexString, event.data(), null);\n    }\n  }\n\n  convertTimeRangeEvent(event) {\n    var T = this._convertTo;\n\n    if (isSubclass(_timerangeevent.default, T)) {\n      return event;\n    }\n\n    if (isSubclass(_timeevent.default, T)) {\n      var alignment = this._alignment;\n      var beginTime = event.begin();\n      var endTime = event.end();\n      var timestamp;\n\n      switch (alignment) {\n        case \"lag\":\n          timestamp = beginTime;\n          break;\n\n        case \"center\":\n          timestamp = new Date(parseInt((beginTime.getTime() + endTime.getTime()) / 2, 10));\n          break;\n\n        case \"lead\":\n          timestamp = endTime;\n          break;\n      }\n\n      return new T(timestamp, event.data());\n    }\n\n    if (isSubclass(_indexedevent.default, T)) {\n      throw new Error(\"Cannot convert TimeRangeEvent to an IndexedEvent\");\n    }\n  }\n\n  convertIndexedEvent(event) {\n    var T = this._convertTo;\n\n    if (isSubclass(_indexedevent.default, T)) {\n      return event;\n    }\n\n    if (isSubclass(_timeevent.default, T)) {\n      var alignment = this._alignment;\n      var beginTime = event.begin();\n      var endTime = event.end();\n      var timestamp;\n\n      switch (alignment) {\n        case \"lag\":\n          timestamp = beginTime;\n          break;\n\n        case \"center\":\n          timestamp = new Date(parseInt((beginTime.getTime() + endTime.getTime()) / 2, 10));\n          break;\n\n        case \"lead\":\n          timestamp = endTime;\n          break;\n      }\n\n      return new T(timestamp, event.data());\n    }\n\n    if (isSubclass(_timerangeevent.default, T)) {\n      return new T(event.timerange(), event.data());\n    }\n  }\n  /**\n   * Output a converted event\n   */\n\n\n  addEvent(event) {\n    if (this.hasObservers()) {\n      var outputEvent;\n\n      if (event instanceof _timerangeevent.default) {\n        outputEvent = this.convertTimeRangeEvent(event);\n      } else if (event instanceof _indexedevent.default) {\n        outputEvent = this.convertIndexedEvent(event);\n      } else if (event instanceof _timeevent.default) {\n        outputEvent = this.convertEvent(event);\n      } else {\n        throw new Error(\"Unknown event type received\");\n      }\n\n      this.emit(outputEvent);\n    }\n  }\n\n}\n\nexports.default = Converter;"]},"metadata":{},"sourceType":"script"}