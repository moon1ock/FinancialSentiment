{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _observable = _interopRequireDefault(require(\"../base/observable\"));\n\nvar _pipeline = require(\"../pipeline\");\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n\nfunction addPrevToChain(n, chain) {\n  chain.push(n);\n\n  if ((0, _pipeline.isPipeline)(n.prev())) {\n    chain.push(n.prev().in());\n    return chain;\n  } else {\n    return addPrevToChain(n.prev(), chain);\n  }\n}\n/**\n * Base class for all Pipeline processors\n */\n\n\nclass Processor extends _observable.default {\n  constructor(arg1, options) {\n    super();\n\n    if ((0, _pipeline.isPipeline)(arg1)) {\n      this._pipeline = arg1;\n      this._prev = options.prev;\n    }\n  }\n\n  prev() {\n    return this._prev;\n  }\n\n  pipeline() {\n    return this._pipeline;\n  }\n\n  chain() {\n    var chain = [this];\n\n    if ((0, _pipeline.isPipeline)(this.prev())) {\n      chain.push(this.prev().in());\n      return chain;\n    } else {\n      return addPrevToChain(this.prev(), chain);\n    }\n  }\n\n  flush() {\n    super.flush();\n  }\n\n}\n\nvar _default = Processor;\nexports.default = _default;","map":{"version":3,"sources":["/Users/nicholasraffone/Documents/swefall2021/finalproj/FinancialSentiment/fin_sentiment_front/node_modules/pondjs/lib/lib/processors/processor.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_observable","_pipeline","addPrevToChain","n","chain","push","isPipeline","prev","in","Processor","constructor","arg1","options","_prev","pipeline","flush","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,WAAW,GAAGP,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAAxC;;AAEA,IAAIO,SAAS,GAAGP,OAAO,CAAC,aAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASQ,cAAT,CAAwBC,CAAxB,EAA2BC,KAA3B,EAAkC;AAChCA,EAAAA,KAAK,CAACC,IAAN,CAAWF,CAAX;;AAEA,MAAI,CAAC,GAAGF,SAAS,CAACK,UAAd,EAA0BH,CAAC,CAACI,IAAF,EAA1B,CAAJ,EAAyC;AACvCH,IAAAA,KAAK,CAACC,IAAN,CAAWF,CAAC,CAACI,IAAF,GAASC,EAAT,EAAX;AACA,WAAOJ,KAAP;AACD,GAHD,MAGO;AACL,WAAOF,cAAc,CAACC,CAAC,CAACI,IAAF,EAAD,EAAWH,KAAX,CAArB;AACD;AACF;AACD;AACA;AACA;;;AAGA,MAAMK,SAAN,SAAwBT,WAAW,CAACD,OAApC,CAA4C;AAC1CW,EAAAA,WAAW,CAACC,IAAD,EAAOC,OAAP,EAAgB;AACzB;;AAEA,QAAI,CAAC,GAAGX,SAAS,CAACK,UAAd,EAA0BK,IAA1B,CAAJ,EAAqC;AACnC,WAAKV,SAAL,GAAiBU,IAAjB;AACA,WAAKE,KAAL,GAAaD,OAAO,CAACL,IAArB;AACD;AACF;;AAEDA,EAAAA,IAAI,GAAG;AACL,WAAO,KAAKM,KAAZ;AACD;;AAEDC,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKb,SAAZ;AACD;;AAEDG,EAAAA,KAAK,GAAG;AACN,QAAIA,KAAK,GAAG,CAAC,IAAD,CAAZ;;AAEA,QAAI,CAAC,GAAGH,SAAS,CAACK,UAAd,EAA0B,KAAKC,IAAL,EAA1B,CAAJ,EAA4C;AAC1CH,MAAAA,KAAK,CAACC,IAAN,CAAW,KAAKE,IAAL,GAAYC,EAAZ,EAAX;AACA,aAAOJ,KAAP;AACD,KAHD,MAGO;AACL,aAAOF,cAAc,CAAC,KAAKK,IAAL,EAAD,EAAcH,KAAd,CAArB;AACD;AACF;;AAEDW,EAAAA,KAAK,GAAG;AACN,UAAMA,KAAN;AACD;;AA/ByC;;AAmC5C,IAAIC,QAAQ,GAAGP,SAAf;AACAZ,OAAO,CAACE,OAAR,GAAkBiB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _observable = _interopRequireDefault(require(\"../base/observable\"));\n\nvar _pipeline = require(\"../pipeline\");\n\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\nfunction addPrevToChain(n, chain) {\n  chain.push(n);\n\n  if ((0, _pipeline.isPipeline)(n.prev())) {\n    chain.push(n.prev().in());\n    return chain;\n  } else {\n    return addPrevToChain(n.prev(), chain);\n  }\n}\n/**\n * Base class for all Pipeline processors\n */\n\n\nclass Processor extends _observable.default {\n  constructor(arg1, options) {\n    super();\n\n    if ((0, _pipeline.isPipeline)(arg1)) {\n      this._pipeline = arg1;\n      this._prev = options.prev;\n    }\n  }\n\n  prev() {\n    return this._prev;\n  }\n\n  pipeline() {\n    return this._pipeline;\n  }\n\n  chain() {\n    var chain = [this];\n\n    if ((0, _pipeline.isPipeline)(this.prev())) {\n      chain.push(this.prev().in());\n      return chain;\n    } else {\n      return addPrevToChain(this.prev(), chain);\n    }\n  }\n\n  flush() {\n    super.flush();\n  }\n\n}\n\nvar _default = Processor;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}